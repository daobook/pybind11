# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Wenzel Jakob
# This file is distributed under the same license as the pybind11 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pybind11 2.10.0.dev1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-29 20:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../changelog.rst:4
msgid "Changelog"
msgstr ""

#: ../../changelog.rst:6
msgid ""
"Starting with version 1.8.0, pybind11 releases use a `semantic versioning"
" <http://semver.org>`_ policy."
msgstr ""

#: ../../changelog.rst:9
msgid ""
"Changes will be added here periodically from the \"Suggested changelog "
"entry\" block in pull request descriptions."
msgstr ""

#: ../../changelog.rst:14
msgid "IN DEVELOPMENT"
msgstr ""

#: ../../changelog.rst:16
msgid "Changes will be summarized here periodically."
msgstr ""

#: ../../changelog.rst:18 ../../changelog.rst:33 ../../changelog.rst:54
#: ../../changelog.rst:110 ../../changelog.rst:270 ../../changelog.rst:444
#: ../../changelog.rst:506 ../../changelog.rst:569 ../../changelog.rst:717
#: ../../changelog.rst:902
msgid "Changes:"
msgstr ""

#: ../../changelog.rst:20
msgid ""
"``PyGILState_Check()``'s in ``pybind11::handle``'s ``inc_ref()`` & "
"``dec_ref()`` are now enabled by default again. `#4246 "
"<https://github.com/pybind/pybind11/pull/4246>`_"
msgstr ""

#: ../../changelog.rst:24 ../../changelog.rst:84 ../../changelog.rst:224
#: ../../changelog.rst:401 ../../changelog.rst:471 ../../changelog.rst:539
#: ../../changelog.rst:601 ../../changelog.rst:754 ../../changelog.rst:977
msgid "Build system improvements:"
msgstr ""

#: ../../changelog.rst:26
msgid ""
"Update clang-tidy to 15 in CI. `#4387 "
"<https://github.com/pybind/pybind11/pull/4387>`_"
msgstr ""

#: ../../changelog.rst:31
msgid "Version 2.10.3 (Jan 3, 2023)"
msgstr ""

#: ../../changelog.rst:35
msgid ""
"Temporarily made our GIL status assertions (added in 2.10.2) disabled by "
"default (re-enable manually by defining "
"``PYBIND11_ASSERT_GIL_HELD_INCREF_DECREF``, will be enabled in 2.11). "
"`#4432 <https://github.com/pybind/pybind11/pull/4432>`_"
msgstr ""

#: ../../changelog.rst:40
msgid ""
"Improved error messages when ``inc_ref``/``dec_ref`` are called with an "
"invalid GIL state. `#4427 "
"<https://github.com/pybind/pybind11/pull/4427>`_ `#4436 "
"<https://github.com/pybind/pybind11/pull/4436>`_"
msgstr ""

#: ../../changelog.rst:45
msgid "Bug Fixes:"
msgstr ""

#: ../../changelog.rst:47
msgid ""
"Some minor touchups found by static analyzers. `#4440 "
"<https://github.com/pybind/pybind11/pull/4440>`_"
msgstr ""

#: ../../changelog.rst:52
msgid "Version 2.10.2 (Dec 20, 2022)"
msgstr ""

#: ../../changelog.rst:56
msgid ""
"``scoped_interpreter`` constructor taking ``PyConfig``. `#4330 "
"<https://github.com/pybind/pybind11/pull/4330>`_"
msgstr ""

#: ../../changelog.rst:59
msgid ""
"``pybind11/eigen/tensor.h`` adds converters to and from ``Eigen::Tensor``"
" and ``Eigen::TensorMap``. `#4201 "
"<https://github.com/pybind/pybind11/pull/4201>`_"
msgstr ""

#: ../../changelog.rst:63
msgid ""
"``PyGILState_Check()``'s  were integrated to ``pybind11::handle`` "
"``inc_ref()`` & ``dec_ref()``. The added GIL checks are guarded by "
"``PYBIND11_ASSERT_GIL_HELD_INCREF_DECREF``, which is the default only if "
"``NDEBUG`` is not defined. (Made non-default in 2.10.3, will be active in"
" 2.11) `#4246 <https://github.com/pybind/pybind11/pull/4246>`_"
msgstr ""

#: ../../changelog.rst:69
msgid ""
"Add option for enable/disable enum members in docstring. `#2768 "
"<https://github.com/pybind/pybind11/pull/2768>`_"
msgstr ""

#: ../../changelog.rst:72
msgid ""
"Fixed typing of ``KeysView``, ``ValuesView`` and ``ItemsView`` in "
"``bind_map``. `#4353 <https://github.com/pybind/pybind11/pull/4353>`_"
msgstr ""

#: ../../changelog.rst:75 ../../changelog.rst:133 ../../changelog.rst:304
#: ../../changelog.rst:452 ../../changelog.rst:529 ../../changelog.rst:579
#: ../../changelog.rst:841 ../../changelog.rst:1092
msgid "Bug fixes:"
msgstr ""

#: ../../changelog.rst:77
msgid ""
"Bug fix affecting only Python 3.6 under very specific, uncommon "
"conditions: move ``PyEval_InitThreads()`` call to the correct location. "
"`#4350 <https://github.com/pybind/pybind11/pull/4350>`_"
msgstr ""

#: ../../changelog.rst:81
msgid ""
"Fix segfault bug when passing foreign native functions to functional.h. "
"`#4254 <https://github.com/pybind/pybind11/pull/4254>`_"
msgstr ""

#: ../../changelog.rst:86
msgid ""
"Support setting PYTHON_LIBRARIES manually for Windows ARM cross-"
"compilation (classic mode). `#4406 "
"<https://github.com/pybind/pybind11/pull/4406>`_"
msgstr ""

#: ../../changelog.rst:90
msgid ""
"Extend IPO/LTO detection for ICX (a.k.a IntelLLVM) compiler. `#4402 "
"<https://github.com/pybind/pybind11/pull/4402>`_"
msgstr ""

#: ../../changelog.rst:93
msgid ""
"Allow calling ``find_package(pybind11 CONFIG)`` multiple times from "
"separate directories in the same CMake project and properly link Python "
"(new mode). `#4401 <https://github.com/pybind/pybind11/pull/4401>`_"
msgstr ""

#: ../../changelog.rst:97
msgid ""
"``multiprocessing_set_spawn`` in pytest fixture for added safety. `#4377 "
"<https://github.com/pybind/pybind11/pull/4377>`_"
msgstr ""

#: ../../changelog.rst:100
msgid ""
"Fixed a bug in two pybind11/tools cmake scripts causing \"Unknown "
"arguments specified\" errors. `#4327 "
"<https://github.com/pybind/pybind11/pull/4327>`_"
msgstr ""

#: ../../changelog.rst:106
msgid "Version 2.10.1 (Oct 31, 2022)"
msgstr ""

#: ../../changelog.rst:108
msgid ""
"This is the first version to fully support embedding the newly released "
"Python 3.11."
msgstr ""

#: ../../changelog.rst:112
msgid ""
"Allow ``pybind11::capsule`` constructor to take null destructor pointers."
" `#4221 <https://github.com/pybind/pybind11/pull/4221>`_"
msgstr ""

#: ../../changelog.rst:115
msgid ""
"``embed.h`` was changed so that ``PYTHONPATH`` is used also with Python "
"3.11 (established behavior). `#4119 "
"<https://github.com/pybind/pybind11/pull/4119>`_"
msgstr ""

#: ../../changelog.rst:119
msgid ""
"A ``PYBIND11_SIMPLE_GIL_MANAGEMENT`` option was added (cmake, C++ "
"define), along with many additional tests in ``test_gil_scoped.py``. The "
"option may be useful to try when debugging GIL-related issues, to "
"determine if the more complex default implementation is or is not to "
"blame. See #4216 for background. WARNING: Please be careful to not create"
" ODR violations when using the option: everything that is linked together"
" with mutual symbol visibility needs to be rebuilt. `#4216 "
"<https://github.com/pybind/pybind11/pull/4216>`_"
msgstr ""

#: ../../changelog.rst:128
msgid ""
"``PYBIND11_EXPORT_EXCEPTION`` was made non-empty only under macOS. This "
"makes Linux builds safer, and enables the removal of warning suppression "
"pragmas for Windows. `#4298 "
"<https://github.com/pybind/pybind11/pull/4298>`_"
msgstr ""

#: ../../changelog.rst:135
msgid ""
"Fixed a bug where ``UnicodeDecodeError`` was not propagated from various "
"``py::str`` ctors when decoding surrogate utf characters. `#4294 "
"<https://github.com/pybind/pybind11/pull/4294>`_"
msgstr ""

#: ../../changelog.rst:139
msgid ""
"Revert perfect forwarding for ``make_iterator``. This broke at least one "
"valid use case. May revisit later. `#4234 "
"<https://github.com/pybind/pybind11/pull/4234>`_"
msgstr ""

#: ../../changelog.rst:143
msgid ""
"Fix support for safe casts to ``void*`` (regression in 2.10.0). `#4275 "
"<https://github.com/pybind/pybind11/pull/4275>`_"
msgstr ""

#: ../../changelog.rst:146
msgid ""
"Fix ``char8_t`` support (regression in 2.9). `#4278 "
"<https://github.com/pybind/pybind11/pull/4278>`_"
msgstr ""

#: ../../changelog.rst:149
msgid ""
"Unicode surrogate character in Python exception message leads to process "
"termination in ``error_already_set::what()``. `#4297 "
"<https://github.com/pybind/pybind11/pull/4297>`_"
msgstr ""

#: ../../changelog.rst:153
msgid ""
"Fix MSVC 2019 v.1924 & C++14 mode error for ``overload_cast``. `#4188 "
"<https://github.com/pybind/pybind11/pull/4188>`_"
msgstr ""

#: ../../changelog.rst:156
msgid ""
"Make augmented assignment operators non-const for the object-api. "
"Behavior was previously broken for augmented assignment operators. `#4065"
" <https://github.com/pybind/pybind11/pull/4065>`_"
msgstr ""

#: ../../changelog.rst:160
msgid ""
"Add proper error checking to C++ bindings for Python list append and "
"insert. `#4208 <https://github.com/pybind/pybind11/pull/4208>`_"
msgstr ""

#: ../../changelog.rst:163
msgid ""
"Work-around for Nvidia's CUDA nvcc compiler in versions 11.4.0 - 11.8.0. "
"`#4220 <https://github.com/pybind/pybind11/pull/4220>`_"
msgstr ""

#: ../../changelog.rst:166
msgid ""
"A workaround for PyPy was added in the ``py::error_already_set`` "
"implementation, related to PR `#1895 "
"<https://github.com/pybind/pybind11/pull/1895>`_ released with v2.10.0. "
"`#4079 <https://github.com/pybind/pybind11/pull/4079>`_"
msgstr ""

#: ../../changelog.rst:171
msgid ""
"Fixed compiler errors when C++23 ``std::forward_like`` is available. "
"`#4136 <https://github.com/pybind/pybind11/pull/4136>`_"
msgstr ""

#: ../../changelog.rst:174
msgid ""
"Properly raise exceptions in contains methods (like when an object in "
"unhashable). `#4209 <https://github.com/pybind/pybind11/pull/4209>`_"
msgstr ""

#: ../../changelog.rst:177
msgid ""
"Further improve another error in exception handling. `#4232 "
"<https://github.com/pybind/pybind11/pull/4232>`_"
msgstr ""

#: ../../changelog.rst:180
msgid ""
"``get_local_internals()`` was made compatible with "
"``finalize_interpreter()``, fixing potential freezes during interpreter "
"finalization. `#4192 <https://github.com/pybind/pybind11/pull/4192>`_"
msgstr ""

#: ../../changelog.rst:185 ../../changelog.rst:350
msgid "Performance and style:"
msgstr ""

#: ../../changelog.rst:187
msgid ""
"Reserve space in set and STL map casters if possible. This will prevent "
"unnecessary rehashing / resizing by knowing the number of keys ahead of "
"time for Python to C++ casting. This improvement will greatly speed up "
"the casting of large unordered maps and sets. `#4194 "
"<https://github.com/pybind/pybind11/pull/4194>`_"
msgstr ""

#: ../../changelog.rst:193
msgid ""
"GIL RAII scopes are non-copyable to avoid potential bugs. `#4183 "
"<https://github.com/pybind/pybind11/pull/4183>`_"
msgstr ""

#: ../../changelog.rst:196
msgid ""
"Explicitly default all relevant ctors for pytypes in the "
"``PYBIND11_OBJECT`` macros and enforce the clang-tidy checks ``modernize-"
"use-equals-default`` in macros as well. `#4017 "
"<https://github.com/pybind/pybind11/pull/4017>`_"
msgstr ""

#: ../../changelog.rst:201
msgid ""
"Optimize iterator advancement in C++ bindings. `#4237 "
"<https://github.com/pybind/pybind11/pull/4237>`_"
msgstr ""

#: ../../changelog.rst:204
msgid ""
"Use the modern ``PyObject_GenericGetDict`` and "
"``PyObject_GenericSetDict`` for handling dynamic attribute dictionaries. "
"`#4106 <https://github.com/pybind/pybind11/pull/4106>`_"
msgstr ""

#: ../../changelog.rst:208
msgid ""
"Document that users should use ``PYBIND11_NAMESPACE`` instead of using "
"``pybind11`` when opening namespaces. Using namespace declarations and "
"namespace qualification remain the same as ``pybind11``. This is done to "
"ensure consistent symbol visibility. `#4098 "
"<https://github.com/pybind/pybind11/pull/4098>`_"
msgstr ""

#: ../../changelog.rst:214
msgid ""
"Mark ``detail::forward_like`` as constexpr. `#4147 "
"<https://github.com/pybind/pybind11/pull/4147>`_"
msgstr ""

#: ../../changelog.rst:217
msgid ""
"Optimize unpacking_collector when processing ``arg_v`` arguments. `#4219 "
"<https://github.com/pybind/pybind11/pull/4219>`_"
msgstr ""

#: ../../changelog.rst:220
msgid ""
"Optimize casting C++ object to ``None``. `#4269 "
"<https://github.com/pybind/pybind11/pull/4269>`_"
msgstr ""

#: ../../changelog.rst:226
msgid ""
"CMake: revert overwrite behavior, now opt-in with "
"``PYBIND11_PYTHONLIBS_OVERRWRITE OFF``. `#4195 "
"<https://github.com/pybind/pybind11/pull/4195>`_"
msgstr ""

#: ../../changelog.rst:229
msgid ""
"Include a pkg-config file when installing pybind11, such as in the Python"
" package. `#4077 <https://github.com/pybind/pybind11/pull/4077>`_"
msgstr ""

#: ../../changelog.rst:233
msgid ""
"Avoid stripping debug symbols when ``CMAKE_BUILD_TYPE`` is set to "
"``DEBUG`` instead of ``Debug``. `#4078 "
"<https://github.com/pybind/pybind11/pull/4078>`_"
msgstr ""

#: ../../changelog.rst:237
msgid ""
"Followup to `#3948 <https://github.com/pybind/pybind11/pull/3948>`_, "
"fixing vcpkg again. `#4123 "
"<https://github.com/pybind/pybind11/pull/4123>`_"
msgstr ""

#: ../../changelog.rst:241
msgid "Version 2.10.0 (Jul 15, 2022)"
msgstr ""

#: ../../changelog.rst:243
msgid ""
"Removed support for Python 2.7, Python 3.5, and MSVC 2015. Support for "
"MSVC 2017 is limited due to availability of CI runners; we highly "
"recommend MSVC 2019 or 2022 be used. Initial support added for Python "
"3.11."
msgstr ""

#: ../../changelog.rst:247 ../../changelog.rst:668 ../../changelog.rst:876
#: ../../changelog.rst:1193
msgid "New features:"
msgstr ""

#: ../../changelog.rst:249
msgid ""
"``py::anyset`` & ``py::frozenset`` were added, with copying (cast) to "
"``std::set`` (similar to ``set``). `#3901 "
"<https://github.com/pybind/pybind11/pull/3901>`_"
msgstr ""

#: ../../changelog.rst:253
msgid ""
"Support bytearray casting to string. `#3707 "
"<https://github.com/pybind/pybind11/pull/3707>`_"
msgstr ""

#: ../../changelog.rst:256
msgid ""
"``type_caster<std::monostate>`` was added. ``std::monostate`` is a tag "
"type that allows ``std::variant`` to act as an optional, or allows "
"default construction of a ``std::variant`` holding a non-default "
"constructible type. `#3818 "
"<https://github.com/pybind/pybind11/pull/3818>`_"
msgstr ""

#: ../../changelog.rst:261
msgid ""
"``pybind11::capsule::set_name`` added to mutate the name of the capsule "
"instance. `#3866 <https://github.com/pybind/pybind11/pull/3866>`_"
msgstr ""

#: ../../changelog.rst:264
msgid ""
"NumPy: dtype constructor from type number added, accessors corresponding "
"to Python API ``dtype.num``, ``dtype.byteorder``, ``dtype.flags`` and "
"``dtype.alignment`` added. `#3868 "
"<https://github.com/pybind/pybind11/pull/3868>`_"
msgstr ""

#: ../../changelog.rst:272
msgid ""
"Python 3.6 is now the minimum supported version. `#3688 "
"<https://github.com/pybind/pybind11/pull/3688>`_ `#3719 "
"<https://github.com/pybind/pybind11/pull/3719>`_"
msgstr ""

#: ../../changelog.rst:276
msgid ""
"The minimum version for MSVC is now 2017. `#3722 "
"<https://github.com/pybind/pybind11/pull/3722>`_"
msgstr ""

#: ../../changelog.rst:279
msgid ""
"Fix issues with CPython 3.11 betas and add to supported test matrix. "
"`#3923 <https://github.com/pybind/pybind11/pull/3923>`_"
msgstr ""

#: ../../changelog.rst:282
msgid ""
"``error_already_set`` is now safer and more performant, especially for "
"exceptions with long tracebacks, by delaying computation. `#1895 "
"<https://github.com/pybind/pybind11/pull/1895>`_"
msgstr ""

#: ../../changelog.rst:286
msgid ""
"Improve exception handling in python ``str`` bindings. `#3826 "
"<https://github.com/pybind/pybind11/pull/3826>`_"
msgstr ""

#: ../../changelog.rst:289
msgid ""
"The bindings for capsules now have more consistent exception handling. "
"`#3825 <https://github.com/pybind/pybind11/pull/3825>`_"
msgstr ""

#: ../../changelog.rst:292
msgid ""
"``PYBIND11_OBJECT_CVT`` and ``PYBIND11_OBJECT_CVT_DEFAULT`` macro can now"
" be used to define classes in namespaces other than pybind11. `#3797 "
"<https://github.com/pybind/pybind11/pull/3797>`_"
msgstr ""

#: ../../changelog.rst:296
msgid ""
"Error printing code now uses ``PYBIND11_DETAILED_ERROR_MESSAGES`` instead"
" of requiring ``NDEBUG``, allowing use with release builds if desired. "
"`#3913 <https://github.com/pybind/pybind11/pull/3913>`_"
msgstr ""

#: ../../changelog.rst:300
msgid ""
"Implicit conversion of the literal ``0`` to ``pybind11::handle`` is now "
"disabled. `#4008 <https://github.com/pybind/pybind11/pull/4008>`_"
msgstr ""

#: ../../changelog.rst:306
msgid ""
"Fix exception handling when ``pybind11::weakref()`` fails. `#3739 "
"<https://github.com/pybind/pybind11/pull/3739>`_"
msgstr ""

#: ../../changelog.rst:309
msgid ""
"``module_::def_submodule`` was missing proper error handling. This is "
"fixed now. `#3973 <https://github.com/pybind/pybind11/pull/3973>`_"
msgstr ""

#: ../../changelog.rst:312
msgid ""
"The behavior or ``error_already_set`` was made safer and the highly "
"opaque \"Unknown internal error occurred\" message was replaced with a "
"more helpful message. `#3982 "
"<https://github.com/pybind/pybind11/pull/3982>`_"
msgstr ""

#: ../../changelog.rst:317
msgid ""
"``error_already_set::what()`` now handles non-normalized exceptions "
"correctly. `#3971 <https://github.com/pybind/pybind11/pull/3971>`_"
msgstr ""

#: ../../changelog.rst:320
msgid ""
"Support older C++ compilers where filesystem is not yet part of the "
"standard library and is instead included in "
"``std::experimental::filesystem``. `#3840 "
"<https://github.com/pybind/pybind11/pull/3840>`_"
msgstr ""

#: ../../changelog.rst:324
msgid ""
"Fix ``-Wfree-nonheap-object`` warnings produced by GCC by avoiding "
"returning pointers to static objects with "
"``return_value_policy::take_ownership``. `#3946 "
"<https://github.com/pybind/pybind11/pull/3946>`_"
msgstr ""

#: ../../changelog.rst:328
msgid ""
"Fix cast from pytype rvalue to another pytype. `#3949 "
"<https://github.com/pybind/pybind11/pull/3949>`_"
msgstr ""

#: ../../changelog.rst:331
msgid ""
"Ensure proper behavior when garbage collecting classes with dynamic "
"attributes in Python >=3.9. `#4051 "
"<https://github.com/pybind/pybind11/pull/4051>`_"
msgstr ""

#: ../../changelog.rst:334
msgid ""
"A couple long-standing ``PYBIND11_NAMESPACE`` "
"``__attribute__((visibility(\"hidden\")))`` inconsistencies are now fixed"
" (affects only unusual environments). `#4043 "
"<https://github.com/pybind/pybind11/pull/4043>`_"
msgstr ""

#: ../../changelog.rst:339
msgid ""
"``pybind11::detail::get_internals()`` is now resilient to in-flight "
"Python exceptions. `#3981 "
"<https://github.com/pybind/pybind11/pull/3981>`_"
msgstr ""

#: ../../changelog.rst:343
msgid ""
"Arrays with a dimension of size 0 are now properly converted to dynamic "
"Eigen matrices (more common in NumPy 1.23). `#4038 "
"<https://github.com/pybind/pybind11/pull/4038>`_"
msgstr ""

#: ../../changelog.rst:347
msgid ""
"Avoid catching unrelated errors when importing NumPy. `#3974 "
"<https://github.com/pybind/pybind11/pull/3974>`_"
msgstr ""

#: ../../changelog.rst:352
msgid ""
"Added an accessor overload of ``(object &&key)`` to reference steal the "
"object when using python types as keys. This prevents unnecessary "
"reference count overhead for attr, dictionary, tuple, and sequence look "
"ups. Added additional regression tests. Fixed a performance bug the "
"caused accessor assignments to potentially perform unnecessary copies. "
"`#3970 <https://github.com/pybind/pybind11/pull/3970>`_"
msgstr ""

#: ../../changelog.rst:359
msgid ""
"Perfect forward all args of ``make_iterator``. `#3980 "
"<https://github.com/pybind/pybind11/pull/3980>`_"
msgstr ""

#: ../../changelog.rst:362
msgid ""
"Avoid potential bug in pycapsule destructor by adding an ``error_guard`` "
"to one of the dtors. `#3958 "
"<https://github.com/pybind/pybind11/pull/3958>`_"
msgstr ""

#: ../../changelog.rst:366
msgid ""
"Optimize dictionary access in ``strip_padding`` for numpy. `#3994 "
"<https://github.com/pybind/pybind11/pull/3994>`_"
msgstr ""

#: ../../changelog.rst:369
msgid ""
"``stl_bind.h`` bindings now take slice args as a const-ref. `#3852 "
"<https://github.com/pybind/pybind11/pull/3852>`_"
msgstr ""

#: ../../changelog.rst:372
msgid ""
"Made slice constructor more consistent, and improve performance of some "
"casters by allowing reference stealing. `#3845 "
"<https://github.com/pybind/pybind11/pull/3845>`_"
msgstr ""

#: ../../changelog.rst:376
msgid ""
"Change numpy dtype from_args method to use const ref. `#3878 "
"<https://github.com/pybind/pybind11/pull/3878>`_"
msgstr ""

#: ../../changelog.rst:379
msgid ""
"Follow rule of three to ensure ``PyErr_Restore`` is called only once. "
"`#3872 <https://github.com/pybind/pybind11/pull/3872>`_"
msgstr ""

#: ../../changelog.rst:382
msgid ""
"Added missing perfect forwarding for ``make_iterator`` functions. `#3860 "
"<https://github.com/pybind/pybind11/pull/3860>`_"
msgstr ""

#: ../../changelog.rst:385
msgid ""
"Optimize c++ to python function casting by using the rvalue caster. "
"`#3966 <https://github.com/pybind/pybind11/pull/3966>`_"
msgstr ""

#: ../../changelog.rst:388
msgid ""
"Optimize Eigen sparse matrix casting by removing unnecessary temporary. "
"`#4064 <https://github.com/pybind/pybind11/pull/4064>`_"
msgstr ""

#: ../../changelog.rst:391
msgid ""
"Avoid potential implicit copy/assignment constructors causing double free"
" in ``strdup_gaurd``. `#3905 "
"<https://github.com/pybind/pybind11/pull/3905>`_"
msgstr ""

#: ../../changelog.rst:395
msgid ""
"Enable clang-tidy checks ``misc-definitions-in-headers``, ``modernize-"
"loop-convert``, and ``modernize-use-nullptr``. `#3881 "
"<https://github.com/pybind/pybind11/pull/3881>`_ `#3988 "
"<https://github.com/pybind/pybind11/pull/3988>`_"
msgstr ""

#: ../../changelog.rst:403
msgid ""
"CMake: Fix file extension on Windows with cp36 and cp37 using FindPython."
" `#3919 <https://github.com/pybind/pybind11/pull/3919>`_"
msgstr ""

#: ../../changelog.rst:406
msgid ""
"CMake: Support multiple Python targets (such as on vcpkg). `#3948 "
"<https://github.com/pybind/pybind11/pull/3948>`_"
msgstr ""

#: ../../changelog.rst:409
msgid ""
"CMake: Fix issue with NVCC on Windows. `#3947 "
"<https://github.com/pybind/pybind11/pull/3947>`_"
msgstr ""

#: ../../changelog.rst:412
msgid ""
"CMake: Drop the bitness check on cross compiles (like targeting "
"WebAssembly via Emscripten). `#3959 "
"<https://github.com/pybind/pybind11/pull/3959>`_"
msgstr ""

#: ../../changelog.rst:416
msgid ""
"Add MSVC builds in debug mode to CI. `#3784 "
"<https://github.com/pybind/pybind11/pull/3784>`_"
msgstr ""

#: ../../changelog.rst:419
msgid ""
"MSVC 2022 C++20 coverage was added to GitHub Actions, including Eigen. "
"`#3732 <https://github.com/pybind/pybind11/pull/3732>`_, `#3741 "
"<https://github.com/pybind/pybind11/pull/3741>`_"
msgstr ""

#: ../../changelog.rst:424 ../../changelog.rst:485 ../../changelog.rst:774
#: ../../changelog.rst:859 ../../changelog.rst:1001
msgid "Backend and tidying up:"
msgstr ""

#: ../../changelog.rst:426
msgid ""
"New theme for the documentation. `#3109 "
"<https://github.com/pybind/pybind11/pull/3109>`_"
msgstr ""

#: ../../changelog.rst:429
msgid ""
"Remove idioms in code comments.  Use more inclusive language. `#3809 "
"<https://github.com/pybind/pybind11/pull/3809>`_"
msgstr ""

#: ../../changelog.rst:432
msgid ""
"``#include <iostream>`` was removed from the ``pybind11/stl.h`` header. "
"Your project may break if it has a transitive dependency on this include."
" The fix is to \"Include What You Use\". `#3928 "
"<https://github.com/pybind/pybind11/pull/3928>`_"
msgstr ""

#: ../../changelog.rst:437
msgid ""
"Avoid ``setup.py <command>`` usage in internal tests. `#3734 "
"<https://github.com/pybind/pybind11/pull/3734>`_"
msgstr ""

#: ../../changelog.rst:442
msgid "Version 2.9.2 (Mar 29, 2022)"
msgstr ""

#: ../../changelog.rst:446
msgid ""
"Enum now has an ``__index__`` method on Python <3.8 too. `#3700 "
"<https://github.com/pybind/pybind11/pull/3700>`_"
msgstr ""

#: ../../changelog.rst:449
msgid ""
"Local internals are now cleared after finalizing the interpreter. `#3744 "
"<https://github.com/pybind/pybind11/pull/3744>`_"
msgstr ""

#: ../../changelog.rst:454
msgid ""
"Better support for Python 3.11 alphas. `#3694 "
"<https://github.com/pybind/pybind11/pull/3694>`_"
msgstr ""

#: ../../changelog.rst:457
msgid ""
"``PYBIND11_TYPE_CASTER`` now uses fully qualified symbols, so it can be "
"used outside of ``pybind11::detail``. `#3758 "
"<https://github.com/pybind/pybind11/pull/3758>`_"
msgstr ""

#: ../../changelog.rst:461
msgid ""
"Some fixes for PyPy 3.9. `#3768 "
"<https://github.com/pybind/pybind11/pull/3768>`_"
msgstr ""

#: ../../changelog.rst:464
msgid ""
"Fixed a potential memleak in PyPy in ``get_type_override``. `#3774 "
"<https://github.com/pybind/pybind11/pull/3774>`_"
msgstr ""

#: ../../changelog.rst:467
msgid ""
"Fix usage of ``VISIBILITY_INLINES_HIDDEN``. `#3721 "
"<https://github.com/pybind/pybind11/pull/3721>`_"
msgstr ""

#: ../../changelog.rst:473
msgid ""
"Uses ``sysconfig`` module to determine installation locations on Python "
">= 3.10, instead of ``distutils`` which has been deprecated. `#3764 "
"<https://github.com/pybind/pybind11/pull/3764>`_"
msgstr ""

#: ../../changelog.rst:477
msgid ""
"Support Catch 2.13.5+ (supporting GLIBC 2.34+). `#3679 "
"<https://github.com/pybind/pybind11/pull/3679>`_"
msgstr ""

#: ../../changelog.rst:480
msgid ""
"Fix test failures with numpy 1.22 by ignoring whitespace when comparing "
"``str()`` of dtypes. `#3682 "
"<https://github.com/pybind/pybind11/pull/3682>`_"
msgstr ""

#: ../../changelog.rst:487
msgid ""
"clang-tidy: added ``readability-qualified-auto``, ``readability-braces-"
"around-statements``, ``cppcoreguidelines-prefer-member-initializer``, "
"``clang-analyzer-optin.performance.Padding``, ``cppcoreguidelines-pro-"
"type-static-cast-downcast``, and ``readability-inconsistent-declaration-"
"parameter-name``. `#3702 "
"<https://github.com/pybind/pybind11/pull/3702>`_, `#3699 "
"<https://github.com/pybind/pybind11/pull/3699>`_, `#3716 "
"<https://github.com/pybind/pybind11/pull/3716>`_, `#3709 "
"<https://github.com/pybind/pybind11/pull/3709>`_"
msgstr ""

#: ../../changelog.rst:498
msgid ""
"clang-format was added to the pre-commit actions, and the entire code "
"base automatically reformatted (after several iterations preparing for "
"this leap). `#3713 <https://github.com/pybind/pybind11/pull/3713>`_"
msgstr ""

#: ../../changelog.rst:504
msgid "Version 2.9.1 (Feb 2, 2022)"
msgstr ""

#: ../../changelog.rst:508
msgid ""
"If possible, attach Python exception with ``py::raise_from`` to "
"``TypeError`` when casting from C++ to Python. This will give additional "
"info if Python exceptions occur in the caster. Adds a test case of trying"
" to convert a set from C++ to Python when the hash function is not "
"defined in Python. `#3605 "
"<https://github.com/pybind/pybind11/pull/3605>`_"
msgstr ""

#: ../../changelog.rst:514
msgid ""
"Add a mapping of C++11 nested exceptions to their Python exception "
"equivalent using ``py::raise_from``. This attaches the nested exceptions "
"in Python using the ``__cause__`` field. `#3608 "
"<https://github.com/pybind/pybind11/pull/3608>`_"
msgstr ""

#: ../../changelog.rst:519
msgid ""
"Propagate Python exception traceback using ``raise_from`` if a pybind11 "
"function runs out of overloads. `#3671 "
"<https://github.com/pybind/pybind11/pull/3671>`_"
msgstr ""

#: ../../changelog.rst:523
msgid ""
"``py::multiple_inheritance`` is now only needed when C++ bases are hidden"
" from pybind11. `#3650 <https://github.com/pybind/pybind11/pull/3650>`_ "
"and `#3659 <https://github.com/pybind/pybind11/pull/3659>`_"
msgstr ""

#: ../../changelog.rst:531
msgid ""
"Remove a boolean cast in ``numpy.h`` that causes MSVC C4800 warnings when"
" compiling against Python 3.10 or newer. `#3669 "
"<https://github.com/pybind/pybind11/pull/3669>`_"
msgstr ""

#: ../../changelog.rst:535
msgid ""
"Render ``py::bool_`` and ``py::float_`` as ``bool`` and ``float`` "
"respectively. `#3622 <https://github.com/pybind/pybind11/pull/3622>`_"
msgstr ""

#: ../../changelog.rst:541
msgid ""
"Fix CMake extension suffix computation on Python 3.10+. `#3663 "
"<https://github.com/pybind/pybind11/pull/3663>`_"
msgstr ""

#: ../../changelog.rst:544
msgid ""
"Allow ``CMAKE_ARGS`` to override CMake args in pybind11's own "
"``setup.py``. `#3577 <https://github.com/pybind/pybind11/pull/3577>`_"
msgstr ""

#: ../../changelog.rst:547
msgid ""
"Remove a few deprecated c-headers. `#3610 "
"<https://github.com/pybind/pybind11/pull/3610>`_"
msgstr ""

#: ../../changelog.rst:550
msgid ""
"More uniform handling of test targets. `#3590 "
"<https://github.com/pybind/pybind11/pull/3590>`_"
msgstr ""

#: ../../changelog.rst:553
msgid ""
"Add clang-tidy readability check to catch potentially swapped function "
"args. `#3611 <https://github.com/pybind/pybind11/pull/3611>`_"
msgstr ""

#: ../../changelog.rst:558
msgid "Version 2.9.0 (Dec 28, 2021)"
msgstr ""

#: ../../changelog.rst:560
msgid "This is the last version to support Python 2.7 and 3.5."
msgstr ""

#: ../../changelog.rst:562
msgid "New Features:"
msgstr ""

#: ../../changelog.rst:564
msgid ""
"Allow ``py::args`` to be followed by other arguments; the remaining "
"arguments are implicitly keyword-only, as if a ``py::kw_only{}`` "
"annotation had been used. `#3402 "
"<https://github.com/pybind/pybind11/pull/3402>`_"
msgstr ""

#: ../../changelog.rst:571
msgid ""
"Make str/bytes/memoryview more interoperable with ``std::string_view``. "
"`#3521 <https://github.com/pybind/pybind11/pull/3521>`_"
msgstr ""

#: ../../changelog.rst:574
msgid ""
"Replace ``_`` with ``const_name`` in internals, avoid defining "
"``pybind::_`` if ``_`` defined as macro (common gettext usage) `#3423 "
"<https://github.com/pybind/pybind11/pull/3423>`_"
msgstr ""

#: ../../changelog.rst:581
msgid ""
"Fix a rare warning about extra copy in an Eigen constructor. `#3486 "
"<https://github.com/pybind/pybind11/pull/3486>`_"
msgstr ""

#: ../../changelog.rst:584
msgid ""
"Fix caching of the C++ overrides. `#3465 "
"<https://github.com/pybind/pybind11/pull/3465>`_"
msgstr ""

#: ../../changelog.rst:587
msgid ""
"Add missing ``std::forward`` calls to some ``cpp_function`` overloads. "
"`#3443 <https://github.com/pybind/pybind11/pull/3443>`_"
msgstr ""

#: ../../changelog.rst:590
msgid ""
"Support PyPy 7.3.7 and the PyPy3.8 beta. Test python-3.11 on PRs with the"
" ``python dev`` label. `#3419 "
"<https://github.com/pybind/pybind11/pull/3419>`_"
msgstr ""

#: ../../changelog.rst:594
msgid ""
"Replace usage of deprecated ``Eigen::MappedSparseMatrix`` with "
"``Eigen::Map<Eigen::SparseMatrix<...>>`` for Eigen 3.3+. `#3499 "
"<https://github.com/pybind/pybind11/pull/3499>`_"
msgstr ""

#: ../../changelog.rst:598
msgid ""
"Tweaks to support Microsoft Visual Studio 2022. `#3497 "
"<https://github.com/pybind/pybind11/pull/3497>`_"
msgstr ""

#: ../../changelog.rst:603
msgid ""
"Nicer CMake printout and IDE organisation for pybind11's own tests. "
"`#3479 <https://github.com/pybind/pybind11/pull/3479>`_"
msgstr ""

#: ../../changelog.rst:606
msgid ""
"CMake: report version type as part of the version string to avoid a "
"spurious space in the package status message. `#3472 "
"<https://github.com/pybind/pybind11/pull/3472>`_"
msgstr ""

#: ../../changelog.rst:610
msgid ""
"Flags starting with ``-g`` in ``$CFLAGS`` and ``$CPPFLAGS`` are no longer"
" overridden by ``.Pybind11Extension``. `#3436 "
"<https://github.com/pybind/pybind11/pull/3436>`_"
msgstr ""

#: ../../changelog.rst:614
msgid ""
"Ensure ThreadPool is closed in ``setup_helpers``. `#3548 "
"<https://github.com/pybind/pybind11/pull/3548>`_"
msgstr ""

#: ../../changelog.rst:617
msgid ""
"Avoid LTS on ``mips64`` and ``ppc64le`` (reported broken). `#3557 "
"<https://github.com/pybind/pybind11/pull/3557>`_"
msgstr ""

#: ../../changelog.rst:622
msgid "v2.8.1 (Oct 27, 2021)"
msgstr ""

#: ../../changelog.rst:624
msgid "Changes and additions:"
msgstr ""

#: ../../changelog.rst:626
msgid ""
"The simple namespace creation shortcut added in 2.8.0 was deprecated due "
"to usage of CPython internal API, and will be removed soon. Use "
"``py::module_::import(\"types\").attr(\"SimpleNamespace\")``. `#3374 "
"<https://github.com/pybinyyd/pybind11/pull/3374>`_"
msgstr ""

#: ../../changelog.rst:631
msgid ""
"Add C++ Exception type to throw and catch ``AttributeError``. Useful for "
"defining custom ``__setattr__`` and ``__getattr__`` methods. `#3387 "
"<https://github.com/pybind/pybind11/pull/3387>`_"
msgstr ""

#: ../../changelog.rst:635 ../../changelog.rst:734 ../../changelog.rst:928
msgid "Fixes:"
msgstr ""

#: ../../changelog.rst:637
msgid ""
"Fixed the potential for dangling references when using properties with "
"``std::optional`` types. `#3376 "
"<https://github.com/pybind/pybind11/pull/3376>`_"
msgstr ""

#: ../../changelog.rst:641
msgid ""
"Modernize usage of ``PyCodeObject`` on Python 3.9+ (moving toward support"
" for Python 3.11a1) `#3368 "
"<https://github.com/pybind/pybind11/pull/3368>`_"
msgstr ""

#: ../../changelog.rst:645
msgid ""
"A long-standing bug in ``eigen.h`` was fixed (originally PR #3343). The "
"bug was unmasked by newly added ``static_assert``'s in the Eigen 3.4.0 "
"release. `#3352 <https://github.com/pybind/pybind11/pull/3352>`_"
msgstr ""

#: ../../changelog.rst:649
msgid ""
"Support multiple raw inclusion of CMake helper files (Conan.io does this "
"for multi-config generators). `#3420 "
"<https://github.com/pybind/pybind11/pull/3420>`_"
msgstr ""

#: ../../changelog.rst:653
msgid ""
"Fix harmless warning on upcoming CMake 3.22. `#3368 "
"<https://github.com/pybind/pybind11/pull/3368>`_"
msgstr ""

#: ../../changelog.rst:656
msgid ""
"Fix 2.8.0 regression with MSVC 2017 + C++17 mode + Python 3. `#3407 "
"<https://github.com/pybind/pybind11/pull/3407>`_"
msgstr ""

#: ../../changelog.rst:659
msgid ""
"Fix 2.8.0 regression that caused undefined behavior (typically segfaults)"
" in ``make_key_iterator``/``make_value_iterator`` if dereferencing the "
"iterator returned a temporary value instead of a reference. `#3348 "
"<https://github.com/pybind/pybind11/pull/3348>`_"
msgstr ""

#: ../../changelog.rst:666
msgid "v2.8.0 (Oct 4, 2021)"
msgstr ""

#: ../../changelog.rst:670
msgid ""
"Added ``py::raise_from`` to enable chaining exceptions. `#3215 "
"<https://github.com/pybind/pybind11/pull/3215>`_"
msgstr ""

#: ../../changelog.rst:673
msgid ""
"Allow exception translators to be optionally registered local to a module"
" instead of applying globally across all pybind11 modules. Use "
"``register_local_exception_translator(ExceptionTranslator&& translator)``"
" instead of  ``register_exception_translator(ExceptionTranslator&& "
"translator)`` to keep your exception remapping code local to the module. "
"`#2650 <https://github.com/pybinyyd/pybind11/pull/2650>`_"
msgstr ""

#: ../../changelog.rst:680
msgid ""
"Add ``make_simple_namespace`` function for instantiating Python "
"``SimpleNamespace`` objects. **Deprecated in 2.8.1.** `#2840 "
"<https://github.com/pybind/pybind11/pull/2840>`_"
msgstr ""

#: ../../changelog.rst:684
msgid ""
"``pybind11::scoped_interpreter`` and ``initialize_interpreter`` have new "
"arguments to allow ``sys.argv`` initialization. `#2341 "
"<https://github.com/pybind/pybind11/pull/2341>`_"
msgstr ""

#: ../../changelog.rst:688 ../../changelog.rst:838
msgid ""
"Allow Python builtins to be used as callbacks in CPython. `#1413 "
"<https://github.com/pybind/pybind11/pull/1413>`_"
msgstr ""

#: ../../changelog.rst:691
msgid ""
"Added ``view`` to view arrays with a different datatype. `#987 "
"<https://github.com/pybind/pybind11/pull/987>`_"
msgstr ""

#: ../../changelog.rst:694
msgid ""
"Implemented ``reshape`` on arrays. `#984 "
"<https://github.com/pybind/pybind11/pull/984>`_"
msgstr ""

#: ../../changelog.rst:697
msgid ""
"Enable defining custom ``__new__`` methods on classes by fixing bug "
"preventing overriding methods if they have non-pybind11 siblings. `#3265 "
"<https://github.com/pybind/pybind11/pull/3265>`_"
msgstr ""

#: ../../changelog.rst:701
msgid ""
"Add ``make_value_iterator()``, and fix ``make_key_iterator()`` to return "
"references instead of copies. `#3293 "
"<https://github.com/pybind/pybind11/pull/3293>`_"
msgstr ""

#: ../../changelog.rst:705
msgid ""
"Improve the classes generated by ``bind_map``: `#3310 "
"<https://github.com/pybind/pybind11/pull/3310>`_"
msgstr ""

#: ../../changelog.rst:707
msgid "Change ``.items`` from an iterator to a dictionary view."
msgstr ""

#: ../../changelog.rst:708
msgid "Add ``.keys`` and ``.values`` (both dictionary views)."
msgstr ""

#: ../../changelog.rst:709
msgid "Allow ``__contains__`` to take any object."
msgstr ""

#: ../../changelog.rst:711
msgid ""
"``pybind11::custom_type_setup`` was added, for customizing the "
"``PyHeapTypeObject`` corresponding to a class, which may be useful for "
"enabling garbage collection support, among other things. `#3287 "
"<https://github.com/pybind/pybind11/pull/3287>`_"
msgstr ""

#: ../../changelog.rst:719
msgid ""
"Set ``__file__`` constant when running ``eval_file`` in an embedded "
"interpreter. `#3233 <https://github.com/pybind/pybind11/pull/3233>`_"
msgstr ""

#: ../../changelog.rst:722
msgid ""
"Python objects and (C++17) ``std::optional`` now accepted in "
"``py::slice`` constructor. `#1101 "
"<https://github.com/pybind/pybind11/pull/1101>`_"
msgstr ""

#: ../../changelog.rst:726
msgid ""
"The pybind11 proxy types ``str``, ``bytes``, ``bytearray``, ``tuple``, "
"``list`` now consistently support passing ``ssize_t`` values for sizes "
"and indexes. Previously, only ``size_t`` was accepted in several "
"interfaces. `#3219 <https://github.com/pybind/pybind11/pull/3219>`_"
msgstr ""

#: ../../changelog.rst:731
msgid ""
"Avoid evaluating ``PYBIND11_TLS_REPLACE_VALUE`` arguments more than once."
" `#3290 <https://github.com/pybind/pybind11/pull/3290>`_"
msgstr ""

#: ../../changelog.rst:736
msgid ""
"Bug fix: enum value's ``__int__`` returning non-int when underlying type "
"is bool or of char type. `#1334 "
"<https://github.com/pybind/pybind11/pull/1334>`_"
msgstr ""

#: ../../changelog.rst:740
msgid ""
"Fixes bug in setting error state in Capsule's pointer methods. `#3261 "
"<https://github.com/pybind/pybind11/pull/3261>`_"
msgstr ""

#: ../../changelog.rst:743
msgid ""
"A long-standing memory leak in ``py::cpp_function::initialize`` was "
"fixed. `#3229 <https://github.com/pybind/pybind11/pull/3229>`_"
msgstr ""

#: ../../changelog.rst:746
msgid ""
"Fixes thread safety for some ``pybind11::type_caster`` which require "
"lifetime extension, such as for ``std::string_view``. `#3237 "
"<https://github.com/pybind/pybind11/pull/3237>`_"
msgstr ""

#: ../../changelog.rst:750
msgid ""
"Restore compatibility with gcc 4.8.4 as distributed by ubuntu-trusty, "
"linuxmint-17. `#3270 <https://github.com/pybind/pybind11/pull/3270>`_"
msgstr ""

#: ../../changelog.rst:756 ../../changelog.rst:843
msgid ""
"Fix regression in CMake Python package config: improper use of absolute "
"path. `#3144 <https://github.com/pybind/pybind11/pull/3144>`_"
msgstr ""

#: ../../changelog.rst:759
msgid ""
"Cached Python version information could become stale when CMake was re-"
"run with a different Python version. The build system now detects this "
"and updates this information. `#3299 "
"<https://github.com/pybind/pybind11/pull/3299>`_"
msgstr ""

#: ../../changelog.rst:764 ../../changelog.rst:849
msgid ""
"Specified UTF8-encoding in setup.py calls of open(). `#3137 "
"<https://github.com/pybind/pybind11/pull/3137>`_"
msgstr ""

#: ../../changelog.rst:767
msgid ""
"Fix a harmless warning from CMake 3.21 with the classic Python discovery."
" `#3220 <https://github.com/pybind/pybind11/pull/3220>`_"
msgstr ""

#: ../../changelog.rst:770
msgid ""
"Eigen repo and version can now be specified as cmake options. `#3324 "
"<https://github.com/pybind/pybind11/pull/3324>`_"
msgstr ""

#: ../../changelog.rst:776
msgid ""
"Reduced thread-local storage required for keeping alive temporary data "
"for type conversion to one key per ABI version, rather than one key per "
"extension module.  This makes the total thread-local storage required by "
"pybind11 2 keys per ABI version. `#3275 "
"<https://github.com/pybind/pybind11/pull/3275>`_"
msgstr ""

#: ../../changelog.rst:782
msgid ""
"Optimize NumPy array construction with additional moves. `#3183 "
"<https://github.com/pybind/pybind11/pull/3183>`_"
msgstr ""

#: ../../changelog.rst:785
msgid ""
"Conversion to ``std::string`` and ``std::string_view`` now avoids making "
"an extra copy of the data on Python >= 3.3. `#3257 "
"<https://github.com/pybind/pybind11/pull/3257>`_"
msgstr ""

#: ../../changelog.rst:789
msgid ""
"Remove const modifier from certain C++ methods on Python collections "
"(``list``, ``set``, ``dict``) such as (``clear()``, ``append()``, "
"``insert()``, etc...) and annotated them with ``py-non-const``."
msgstr ""

#: ../../changelog.rst:793
msgid ""
"Enable readability ``clang-tidy-const-return`` and remove useless consts."
" `#3254 <https://github.com/pybind/pybind11/pull/3254>`_ `#3194 "
"<https://github.com/pybind/pybind11/pull/3194>`_"
msgstr ""

#: ../../changelog.rst:797
msgid ""
"The clang-tidy ``google-explicit-constructor`` option was enabled. `#3250"
" <https://github.com/pybind/pybind11/pull/3250>`_"
msgstr ""

#: ../../changelog.rst:800
msgid ""
"Mark a pytype move constructor as noexcept (perf). `#3236 "
"<https://github.com/pybind/pybind11/pull/3236>`_"
msgstr ""

#: ../../changelog.rst:803
msgid ""
"Enable clang-tidy check to guard against inheritance slicing. `#3210 "
"<https://github.com/pybind/pybind11/pull/3210>`_"
msgstr ""

#: ../../changelog.rst:806
msgid ""
"Legacy warning suppression pragma were removed from eigen.h. On Unix "
"platforms, please use -isystem for Eigen include directories, to suppress"
" compiler warnings originating from Eigen headers. Note that CMake does "
"this by default. No adjustments are needed for Windows. `#3198 "
"<https://github.com/pybind/pybind11/pull/3198>`_"
msgstr ""

#: ../../changelog.rst:812
msgid ""
"Format pybind11 with isort consistent ordering of imports `#3195 "
"<https://github.com/pybind/pybind11/pull/3195>`_"
msgstr ""

#: ../../changelog.rst:815
msgid ""
"The warnings-suppression \"pragma clamp\" at the top/bottom of pybind11 "
"was removed, clearing the path to refactoring and IWYU cleanup. `#3186 "
"<https://github.com/pybind/pybind11/pull/3186>`_"
msgstr ""

#: ../../changelog.rst:819
msgid ""
"Enable most bugprone checks in clang-tidy and fix the found potential "
"bugs and poor coding styles. `#3166 "
"<https://github.com/pybind/pybind11/pull/3166>`_"
msgstr ""

#: ../../changelog.rst:823
msgid ""
"Add ``clang-tidy-readability`` rules to make boolean casts explicit "
"improving code readability. Also enabled other misc and readability "
"clang-tidy checks. `#3148 "
"<https://github.com/pybind/pybind11/pull/3148>`_"
msgstr ""

#: ../../changelog.rst:827 ../../changelog.rst:856
msgid ""
"Move object in ``.pop()`` for list. `#3116 "
"<https://github.com/pybind/pybind11/pull/3116>`_"
msgstr ""

#: ../../changelog.rst:834
msgid "v2.7.1 (Aug 3, 2021)"
msgstr ""

#: ../../changelog.rst:836 ../../changelog.rst:1038
msgid "Minor missing functionality added:"
msgstr ""

#: ../../changelog.rst:846
msgid ""
"Fix Mingw64 and add to the CI testing matrix. `#3132 "
"<https://github.com/pybind/pybind11/pull/3132>`_"
msgstr ""

#: ../../changelog.rst:852
msgid ""
"Add clang-tidy-readability rules to make boolean casts explicit improving"
" code readability. Also enabled other misc and readability clang-tidy "
"checks. `#3148 <https://github.com/pybind/pybind11/pull/3148>`_"
msgstr ""

#: ../../changelog.rst:861
msgid ""
"Removed and fixed warning suppressions. `#3127 "
"<https://github.com/pybind/pybind11/pull/3127>`_ `#3129 "
"<https://github.com/pybind/pybind11/pull/3129>`_ `#3135 "
"<https://github.com/pybind/pybind11/pull/3135>`_ `#3141 "
"<https://github.com/pybind/pybind11/pull/3141>`_ `#3142 "
"<https://github.com/pybind/pybind11/pull/3142>`_ `#3150 "
"<https://github.com/pybind/pybind11/pull/3150>`_ `#3152 "
"<https://github.com/pybind/pybind11/pull/3152>`_ `#3160 "
"<https://github.com/pybind/pybind11/pull/3160>`_ `#3161 "
"<https://github.com/pybind/pybind11/pull/3161>`_"
msgstr ""

#: ../../changelog.rst:874
msgid "v2.7.0 (Jul 16, 2021)"
msgstr ""

#: ../../changelog.rst:878
msgid ""
"Enable ``py::implicitly_convertible<py::none, ...>`` for "
"``py::class_``-wrapped types. `#3059 "
"<https://github.com/pybind/pybind11/pull/3059>`_"
msgstr ""

#: ../../changelog.rst:882
msgid ""
"Allow function pointer extraction from overloaded functions. `#2944 "
"<https://github.com/pybind/pybind11/pull/2944>`_"
msgstr ""

#: ../../changelog.rst:885
msgid ""
"NumPy: added ``.char_()`` to type which gives the NumPy public ``char`` "
"result, which also distinguishes types by bit length (unlike "
"``.kind()``). `#2864 <https://github.com/pybind/pybind11/pull/2864>`_"
msgstr ""

#: ../../changelog.rst:889
msgid ""
"Add ``pybind11::bytearray`` to manipulate ``bytearray`` similar to "
"``bytes``. `#2799 <https://github.com/pybind/pybind11/pull/2799>`_"
msgstr ""

#: ../../changelog.rst:892
msgid ""
"``pybind11/stl/filesystem.h`` registers a type caster that, on "
"C++17/Python 3.6+, converts ``std::filesystem::path`` to ``pathlib.Path``"
" and any ``os.PathLike`` to ``std::filesystem::path``. `#2730 "
"<https://github.com/pybind/pybind11/pull/2730>`_"
msgstr ""

#: ../../changelog.rst:897
msgid ""
"A ``PYBIND11_VERSION_HEX`` define was added, similar to "
"``PY_VERSION_HEX``. `#3120 "
"<https://github.com/pybind/pybind11/pull/3120>`_"
msgstr ""

#: ../../changelog.rst:904
msgid ""
"``py::str`` changed to exclusively hold ``PyUnicodeObject``. Previously "
"``py::str`` could also hold ``bytes``, which is probably surprising, was "
"never documented, and can mask bugs (e.g. accidental use of ``py::str`` "
"instead of ``py::bytes``). `#2409 "
"<https://github.com/pybind/pybind11/pull/2409>`_"
msgstr ""

#: ../../changelog.rst:910
msgid ""
"Add a safety guard to ensure that the Python GIL is held when C++ calls "
"back into Python via ``object_api<>::operator()`` (e.g. ``py::function`` "
"``__call__``).  (This feature is available for Python 3.6+ only.) `#2919 "
"<https://github.com/pybind/pybind11/pull/2919>`_"
msgstr ""

#: ../../changelog.rst:915
msgid ""
"Catch a missing ``self`` argument in calls to ``__init__()``. `#2914 "
"<https://github.com/pybind/pybind11/pull/2914>`_"
msgstr ""

#: ../../changelog.rst:918
msgid ""
"Use ``std::string_view`` if available to avoid a copy when passing an "
"object to a ``std::ostream``. `#3042 "
"<https://github.com/pybind/pybind11/pull/3042>`_"
msgstr ""

#: ../../changelog.rst:922
msgid ""
"An important warning about thread safety was added to the ``iostream.h`` "
"documentation; attempts to make ``py::scoped_ostream_redirect`` thread "
"safe have been removed, as it was only partially effective. `#2995 "
"<https://github.com/pybind/pybind11/pull/2995>`_"
msgstr ""

#: ../../changelog.rst:930
msgid ""
"Performance: avoid unnecessary strlen calls. `#3058 "
"<https://github.com/pybind/pybind11/pull/3058>`_"
msgstr ""

#: ../../changelog.rst:933
msgid ""
"Fix auto-generated documentation string when using ``const T`` in "
"``pyarray_t``. `#3020 <https://github.com/pybind/pybind11/pull/3020>`_"
msgstr ""

#: ../../changelog.rst:937
msgid ""
"Unify error messages thrown by "
"``simple_collector``/``unpacking_collector``. `#3013 "
"<https://github.com/pybind/pybind11/pull/3013>`_"
msgstr ""

#: ../../changelog.rst:940
msgid ""
"``pybind11::builtin_exception`` is now explicitly exported, which means "
"the types included/defined in different modules are identical, and "
"exceptions raised in different modules can be caught correctly. The "
"documentation was updated to explain that custom exceptions that are used"
" across module boundaries need to be explicitly exported as well. `#2999 "
"<https://github.com/pybind/pybind11/pull/2999>`_"
msgstr ""

#: ../../changelog.rst:947
msgid ""
"Fixed exception when printing UTF-8 to a ``scoped_ostream_redirect``. "
"`#2982 <https://github.com/pybind/pybind11/pull/2982>`_"
msgstr ""

#: ../../changelog.rst:950
msgid ""
"Pickle support enhancement: ``setstate`` implementation will attempt to "
"``setattr`` ``__dict__`` only if the unpickled ``dict`` object is not "
"empty, to not force use of ``py::dynamic_attr()`` unnecessarily. `#2972 "
"<https://github.com/pybind/pybind11/pull/2972>`_"
msgstr ""

#: ../../changelog.rst:955
msgid ""
"Allow negative timedelta values to roundtrip. `#2870 "
"<https://github.com/pybind/pybind11/pull/2870>`_"
msgstr ""

#: ../../changelog.rst:958
msgid ""
"Fix unchecked errors could potentially swallow signals/other exceptions. "
"`#2863 <https://github.com/pybind/pybind11/pull/2863>`_"
msgstr ""

#: ../../changelog.rst:961
msgid ""
"Add null pointer check with ``std::localtime``. `#2846 "
"<https://github.com/pybind/pybind11/pull/2846>`_"
msgstr ""

#: ../../changelog.rst:964
msgid ""
"Fix the ``weakref`` constructor from ``py::object`` to create a new "
"``weakref`` on conversion. `#2832 "
"<https://github.com/pybind/pybind11/pull/2832>`_"
msgstr ""

#: ../../changelog.rst:968
msgid ""
"Avoid relying on exceptions in C++17 when getting a ``shared_ptr`` holder"
" from a ``shared_from_this`` class. `#2819 "
"<https://github.com/pybind/pybind11/pull/2819>`_"
msgstr ""

#: ../../changelog.rst:972
msgid ""
"Allow the codec's exception to be raised instead of :code:`RuntimeError` "
"when casting from :code:`py::str` to :code:`std::string`. `#2903 "
"<https://github.com/pybind/pybind11/pull/2903>`_"
msgstr ""

#: ../../changelog.rst:979
msgid ""
"In ``setup_helpers.py``, test for platforms that have some "
"multiprocessing features but lack semaphores, which ``ParallelCompile`` "
"requires. `#3043 <https://github.com/pybind/pybind11/pull/3043>`_"
msgstr ""

#: ../../changelog.rst:983
msgid ""
"Fix ``pybind11_INCLUDE_DIR`` in case ``CMAKE_INSTALL_INCLUDEDIR`` is "
"absolute. `#3005 <https://github.com/pybind/pybind11/pull/3005>`_"
msgstr ""

#: ../../changelog.rst:987
msgid ""
"Fix bug not respecting ``WITH_SOABI`` or ``WITHOUT_SOABI`` to CMake. "
"`#2938 <https://github.com/pybind/pybind11/pull/2938>`_"
msgstr ""

#: ../../changelog.rst:990
msgid ""
"Fix the default ``Pybind11Extension`` compilation flags with a Mingw64 "
"python. `#2921 <https://github.com/pybind/pybind11/pull/2921>`_"
msgstr ""

#: ../../changelog.rst:993
msgid ""
"Clang on Windows: do not pass ``/MP`` (ignored flag). `#2824 "
"<https://github.com/pybind/pybind11/pull/2824>`_"
msgstr ""

#: ../../changelog.rst:996
msgid ""
"``pybind11.setup_helpers.intree_extensions`` can be used to generate "
"``Pybind11Extension`` instances from cpp files placed in the Python "
"package source tree. `#2831 "
"<https://github.com/pybind/pybind11/pull/2831>`_"
msgstr ""

#: ../../changelog.rst:1003
msgid ""
"Enable clang-tidy performance, readability, and modernization checks "
"throughout the codebase to enforce best coding practices. `#3046 "
"<https://github.com/pybind/pybind11/pull/3046>`_, `#3049 "
"<https://github.com/pybind/pybind11/pull/3049>`_, `#3051 "
"<https://github.com/pybind/pybind11/pull/3051>`_, `#3052 "
"<https://github.com/pybind/pybind11/pull/3052>`_, `#3080 "
"<https://github.com/pybind/pybind11/pull/3080>`_, and `#3094 "
"<https://github.com/pybind/pybind11/pull/3094>`_"
msgstr ""

#: ../../changelog.rst:1013
msgid ""
"Checks for common misspellings were added to the pre-commit hooks. `#3076"
" <https://github.com/pybind/pybind11/pull/3076>`_"
msgstr ""

#: ../../changelog.rst:1016
msgid ""
"Changed ``Werror`` to stricter ``Werror-all`` for Intel compiler and "
"fixed minor issues. `#2948 "
"<https://github.com/pybind/pybind11/pull/2948>`_"
msgstr ""

#: ../../changelog.rst:1020
msgid ""
"Fixed compilation with GCC < 5 when the user defines "
"``_GLIBCXX_USE_CXX11_ABI``. `#2956 "
"<https://github.com/pybind/pybind11/pull/2956>`_"
msgstr ""

#: ../../changelog.rst:1023
msgid ""
"Added nox support for easier local testing and linting of contributions. "
"`#3101 <https://github.com/pybind/pybind11/pull/3101>`_ and `#3121 "
"<https://github.com/pybind/pybind11/pull/3121>`_"
msgstr ""

#: ../../changelog.rst:1027
msgid ""
"Avoid RTD style issue with docutils 0.17+. `#3119 "
"<https://github.com/pybind/pybind11/pull/3119>`_"
msgstr ""

#: ../../changelog.rst:1030
msgid ""
"Support pipx run, such as ``pipx run pybind11 --include`` for a quick "
"compile. `#3117 <https://github.com/pybind/pybind11/pull/3117>`_"
msgstr ""

#: ../../changelog.rst:1036
msgid "v2.6.2 (Jan 26, 2021)"
msgstr ""

#: ../../changelog.rst:1040
msgid ""
"enum: add missing Enum.value property. `#2739 "
"<https://github.com/pybind/pybind11/pull/2739>`_"
msgstr ""

#: ../../changelog.rst:1043
msgid ""
"Allow thread termination to be avoided during shutdown for CPython 3.7+ "
"via ``.disarm`` for ``gil_scoped_acquire``/``gil_scoped_release``. `#2657"
" <https://github.com/pybind/pybind11/pull/2657>`_"
msgstr ""

#: ../../changelog.rst:1047
msgid "Fixed or improved behavior in a few special cases:"
msgstr ""

#: ../../changelog.rst:1049
msgid ""
"Fix bug where the constructor of ``object`` subclasses would not throw on"
" being passed a Python object of the wrong type. `#2701 "
"<https://github.com/pybind/pybind11/pull/2701>`_"
msgstr ""

#: ../../changelog.rst:1053
msgid ""
"The ``type_caster`` for integers does not convert Python objects with "
"``__int__`` anymore with ``noconvert`` or during the first round of "
"trying overloads. `#2698 <https://github.com/pybind/pybind11/pull/2698>`_"
msgstr ""

#: ../../changelog.rst:1058
msgid ""
"When casting to a C++ integer, ``__index__`` is always called and not "
"considered as conversion, consistent with Python 3.8+. `#2801 "
"<https://github.com/pybind/pybind11/pull/2801>`_"
msgstr ""

#: ../../changelog.rst:1062
msgid "Build improvements:"
msgstr ""

#: ../../changelog.rst:1064
msgid ""
"Setup helpers: ``extra_compile_args`` and ``extra_link_args`` "
"automatically set by Pybind11Extension are now prepended, which allows "
"them to be overridden by user-set ``extra_compile_args`` and "
"``extra_link_args``. `#2808 "
"<https://github.com/pybind/pybind11/pull/2808>`_"
msgstr ""

#: ../../changelog.rst:1069
msgid ""
"Setup helpers: Don't trigger unused parameter warning. `#2735 "
"<https://github.com/pybind/pybind11/pull/2735>`_"
msgstr ""

#: ../../changelog.rst:1072
msgid ""
"CMake: Support running with ``--warn-uninitialized`` active. `#2806 "
"<https://github.com/pybind/pybind11/pull/2806>`_"
msgstr ""

#: ../../changelog.rst:1075
msgid ""
"CMake: Avoid error if included from two submodule directories. `#2804 "
"<https://github.com/pybind/pybind11/pull/2804>`_"
msgstr ""

#: ../../changelog.rst:1078
msgid ""
"CMake: Fix ``STATIC`` / ``SHARED`` being ignored in FindPython mode. "
"`#2796 <https://github.com/pybind/pybind11/pull/2796>`_"
msgstr ""

#: ../../changelog.rst:1081
msgid ""
"CMake: Respect the setting for ``CMAKE_CXX_VISIBILITY_PRESET`` if "
"defined. `#2793 <https://github.com/pybind/pybind11/pull/2793>`_"
msgstr ""

#: ../../changelog.rst:1084
msgid ""
"CMake: Fix issue with FindPython2/FindPython3 not working with "
"``pybind11::embed``. `#2662 "
"<https://github.com/pybind/pybind11/pull/2662>`_"
msgstr ""

#: ../../changelog.rst:1087
msgid ""
"CMake: mixing local and installed pybind11's would prioritize the "
"installed one over the local one (regression in 2.6.0). `#2716 "
"<https://github.com/pybind/pybind11/pull/2716>`_"
msgstr ""

#: ../../changelog.rst:1094
msgid ""
"Fixed segfault in multithreaded environments when using "
"``scoped_ostream_redirect``. `#2675 "
"<https://github.com/pybind/pybind11/pull/2675>`_"
msgstr ""

#: ../../changelog.rst:1098
msgid ""
"Leave docstring unset when all docstring-related options are disabled, "
"rather than set an empty string. `#2745 "
"<https://github.com/pybind/pybind11/pull/2745>`_"
msgstr ""

#: ../../changelog.rst:1102
msgid ""
"The module key in builtins that pybind11 uses to store its internals "
"changed from std::string to a python str type (more natural on Python 2, "
"no change on Python 3). `#2814 "
"<https://github.com/pybind/pybind11/pull/2814>`_"
msgstr ""

#: ../../changelog.rst:1107
msgid ""
"Fixed assertion error related to unhandled (later overwritten) exception "
"in CPython 3.8 and 3.9 debug builds. `#2685 "
"<https://github.com/pybind/pybind11/pull/2685>`_"
msgstr ""

#: ../../changelog.rst:1111
msgid ""
"Fix ``py::gil_scoped_acquire`` assert with CPython 3.9 debug build. "
"`#2683 <https://github.com/pybind/pybind11/pull/2683>`_"
msgstr ""

#: ../../changelog.rst:1114
msgid ""
"Fix issue with a test failing on pytest 6.2. `#2741 "
"<https://github.com/pybind/pybind11/pull/2741>`_"
msgstr ""

#: ../../changelog.rst:1117
msgid "Warning fixes:"
msgstr ""

#: ../../changelog.rst:1119
msgid ""
"Fix warning modifying constructor parameter 'flag' that shadows a field "
"of 'set_flag' ``[-Wshadow-field-in-constructor-modified]``. `#2780 "
"<https://github.com/pybind/pybind11/pull/2780>`_"
msgstr ""

#: ../../changelog.rst:1123
msgid ""
"Suppressed some deprecation warnings about old-style "
"``__init__``/``__setstate__`` in the tests. `#2759 "
"<https://github.com/pybind/pybind11/pull/2759>`_"
msgstr ""

#: ../../changelog.rst:1127
msgid "Valgrind work:"
msgstr ""

#: ../../changelog.rst:1129
msgid ""
"Fix invalid access when calling a pybind11 ``__init__`` on a non-pybind11"
" class instance. `#2755 <https://github.com/pybind/pybind11/pull/2755>`_"
msgstr ""

#: ../../changelog.rst:1133
msgid ""
"Fixed various minor memory leaks in pybind11's test suite. `#2758 "
"<https://github.com/pybind/pybind11/pull/2758>`_"
msgstr ""

#: ../../changelog.rst:1136
msgid ""
"Resolved memory leak in cpp_function initialization when exceptions "
"occurred. `#2756 <https://github.com/pybind/pybind11/pull/2756>`_"
msgstr ""

#: ../../changelog.rst:1139
msgid ""
"Added a Valgrind build, checking for leaks and memory-related UB, to CI. "
"`#2746 <https://github.com/pybind/pybind11/pull/2746>`_"
msgstr ""

#: ../../changelog.rst:1142
msgid "Compiler support:"
msgstr ""

#: ../../changelog.rst:1144
msgid ""
"Intel compiler was not activating C++14 support due to a broken define. "
"`#2679 <https://github.com/pybind/pybind11/pull/2679>`_"
msgstr ""

#: ../../changelog.rst:1147
msgid ""
"Support ICC and NVIDIA HPC SDK in C++17 mode. `#2729 "
"<https://github.com/pybind/pybind11/pull/2729>`_"
msgstr ""

#: ../../changelog.rst:1150
msgid ""
"Support Intel OneAPI compiler (ICC 20.2) and add to CI. `#2573 "
"<https://github.com/pybind/pybind11/pull/2573>`_"
msgstr ""

#: ../../changelog.rst:1156
msgid "v2.6.1 (Nov 11, 2020)"
msgstr ""

#: ../../changelog.rst:1158
msgid ""
"``py::exec``, ``py::eval``, and ``py::eval_file`` now add the builtins "
"module as ``\"__builtins__\"`` to their ``globals`` argument, better "
"matching ``exec`` and ``eval`` in pure Python. `#2616 "
"<https://github.com/pybind/pybind11/pull/2616>`_"
msgstr ""

#: ../../changelog.rst:1163
msgid ""
"``setup_helpers`` will no longer set a minimum macOS version higher than "
"the current version. `#2622 "
"<https://github.com/pybind/pybind11/pull/2622>`_"
msgstr ""

#: ../../changelog.rst:1167
msgid ""
"Allow deleting static properties. `#2629 "
"<https://github.com/pybind/pybind11/pull/2629>`_"
msgstr ""

#: ../../changelog.rst:1170
msgid ""
"Seal a leak in ``def_buffer``, cleaning up the ``capture`` object after "
"the ``class_`` object goes out of scope. `#2634 "
"<https://github.com/pybind/pybind11/pull/2634>`_"
msgstr ""

#: ../../changelog.rst:1174
msgid ""
"``pybind11_INCLUDE_DIRS`` was incorrect, potentially causing a regression"
" if it was expected to include ``PYTHON_INCLUDE_DIRS`` (please use "
"targets instead). `#2636 <https://github.com/pybind/pybind11/pull/2636>`_"
msgstr ""

#: ../../changelog.rst:1179
msgid ""
"Added parameter names to the ``py::enum_`` constructor and methods, "
"avoiding ``arg0`` in the generated docstrings. `#2637 "
"<https://github.com/pybind/pybind11/pull/2637>`_"
msgstr ""

#: ../../changelog.rst:1183
msgid ""
"Added ``needs_recompile`` optional function to the ``ParallelCompiler`` "
"helper, to allow a recompile to be skipped based on a user-defined "
"function. `#2643 <https://github.com/pybind/pybind11/pull/2643>`_"
msgstr ""

#: ../../changelog.rst:1189
msgid "v2.6.0 (Oct 21, 2020)"
msgstr ""

#: ../../changelog.rst:1191
msgid "See :ref:`upgrade-guide-2.6` for help upgrading to the new version."
msgstr ""

#: ../../changelog.rst:1195
msgid ""
"Keyword-only arguments supported in Python 2 or 3 with ``py::kw_only()``."
" `#2100 <https://github.com/pybind/pybind11/pull/2100>`_"
msgstr ""

#: ../../changelog.rst:1198
msgid ""
"Positional-only arguments supported in Python 2 or 3 with "
"``py::pos_only()``. `#2459 "
"<https://github.com/pybind/pybind11/pull/2459>`_"
msgstr ""

#: ../../changelog.rst:1201
msgid ""
"``py::is_final()`` class modifier to block subclassing (CPython only). "
"`#2151 <https://github.com/pybind/pybind11/pull/2151>`_"
msgstr ""

#: ../../changelog.rst:1204
msgid ""
"Added ``py::prepend()``, allowing a function to be placed at the "
"beginning of the overload chain. `#1131 "
"<https://github.com/pybind/pybind11/pull/1131>`_"
msgstr ""

#: ../../changelog.rst:1208
msgid ""
"Access to the type object now provided with ``py::type::of<T>()`` and "
"``py::type::of(h)``. `#2364 "
"<https://github.com/pybind/pybind11/pull/2364>`_"
msgstr ""

#: ../../changelog.rst:1212
msgid ""
"Perfect forwarding support for methods. `#2048 "
"<https://github.com/pybind/pybind11/pull/2048>`_"
msgstr ""

#: ../../changelog.rst:1215
msgid ""
"Added ``py::error_already_set::discard_as_unraisable()``. `#2372 "
"<https://github.com/pybind/pybind11/pull/2372>`_"
msgstr ""

#: ../../changelog.rst:1218
msgid ""
"``py::hash`` is now public. `#2217 "
"<https://github.com/pybind/pybind11/pull/2217>`_"
msgstr ""

#: ../../changelog.rst:1221
msgid ""
"``py::class_<union_type>`` is now supported. Note that writing to one "
"data member of the union and reading another (type punning) is UB in C++."
" Thus pybind11-bound enums should never be used for such conversions. "
"`#2320 <https://github.com/pybind/pybind11/pull/2320>`_."
msgstr ""

#: ../../changelog.rst:1226
msgid ""
"Classes now check local scope when registering members, allowing a "
"subclass to have a member with the same name as a parent (such as an "
"enum). `#2335 <https://github.com/pybind/pybind11/pull/2335>`_"
msgstr ""

#: ../../changelog.rst:1230
msgid "Code correctness features:"
msgstr ""

#: ../../changelog.rst:1232
msgid ""
"Error now thrown when ``__init__`` is forgotten on subclasses. `#2152 "
"<https://github.com/pybind/pybind11/pull/2152>`_"
msgstr ""

#: ../../changelog.rst:1235
msgid ""
"Throw error if conversion to a pybind11 type if the Python object isn't a"
" valid instance of that type, such as ``py::bytes(o)`` when ``py::object "
"o`` isn't a bytes instance. `#2349 "
"<https://github.com/pybind/pybind11/pull/2349>`_"
msgstr ""

#: ../../changelog.rst:1240
msgid ""
"Throw if conversion to ``str`` fails. `#2477 "
"<https://github.com/pybind/pybind11/pull/2477>`_"
msgstr ""

#: ../../changelog.rst:1244
msgid "API changes:"
msgstr ""

#: ../../changelog.rst:1246
msgid ""
"``py::module`` was renamed ``py::module_`` to avoid issues with C++20 "
"when used unqualified, but an alias ``py::module`` is provided for "
"backward compatibility. `#2489 "
"<https://github.com/pybind/pybind11/pull/2489>`_"
msgstr ""

#: ../../changelog.rst:1251
msgid ""
"Public constructors for ``py::module_`` have been deprecated; please use "
"``pybind11::module_::create_extension_module`` if you were using the "
"public constructor (fairly rare after ``PYBIND11_MODULE`` was "
"introduced). `#2552 <https://github.com/pybind/pybind11/pull/2552>`_"
msgstr ""

#: ../../changelog.rst:1256
msgid ""
"``PYBIND11_OVERLOAD*`` macros and ``get_overload`` function replaced by "
"correctly-named ``PYBIND11_OVERRIDE*`` and ``get_override``, fixing "
"inconsistencies in the presence of a closing ``;`` in these macros. "
"``get_type_overload`` is deprecated. `#2325 "
"<https://github.com/pybind/pybind11/pull/2325>`_"
msgstr ""

#: ../../changelog.rst:1262
msgid "Packaging / building improvements:"
msgstr ""

#: ../../changelog.rst:1264
msgid ""
"The Python package was reworked to be more powerful and useful. `#2433 "
"<https://github.com/pybind/pybind11/pull/2433>`_"
msgstr ""

#: ../../changelog.rst:1267
msgid ""
":ref:`build-setuptools` is easier thanks to a new "
"``pybind11.setup_helpers`` module, which provides utilities to use "
"setuptools with pybind11. It can be used via PEP 518, ``setup_requires``,"
" or by directly importing or copying ``setup_helpers.py`` into your "
"project."
msgstr ""

#: ../../changelog.rst:1272
msgid ""
"CMake configuration files are now included in the Python package. Use "
"``pybind11.get_cmake_dir()`` or ``python -m pybind11 --cmakedir`` to get "
"the directory with the CMake configuration files, or include the site-"
"packages location in your ``CMAKE_MODULE_PATH``. Or you can use the new "
"``pybind11[global]`` extra when you install ``pybind11``, which installs "
"the CMake files and headers into your base environment in the standard "
"location."
msgstr ""

#: ../../changelog.rst:1280
msgid ""
"``pybind11-config`` is another way to write ``python -m pybind11`` if you"
" have your PATH set up."
msgstr ""

#: ../../changelog.rst:1283
msgid ""
"Added external typing support to the helper module, code from ``import "
"pybind11`` can now be type checked. `#2588 "
"<https://github.com/pybind/pybind11/pull/2588>`_"
msgstr ""

#: ../../changelog.rst:1287
msgid ""
"Minimum CMake required increased to 3.4. `#2338 "
"<https://github.com/pybind/pybind11/pull/2338>`_ and `#2370 "
"<https://github.com/pybind/pybind11/pull/2370>`_"
msgstr ""

#: ../../changelog.rst:1291
msgid ""
"Full integration with CMake's C++ standard system and compile features "
"replaces ``PYBIND11_CPP_STANDARD``."
msgstr ""

#: ../../changelog.rst:1294
msgid ""
"Generated config file is now portable to different Python/compiler/CMake "
"versions."
msgstr ""

#: ../../changelog.rst:1297
msgid ""
"Virtual environments prioritized if ``PYTHON_EXECUTABLE`` is not set "
"(``venv``, ``virtualenv``, and ``conda``) (similar to the new FindPython "
"mode)."
msgstr ""

#: ../../changelog.rst:1301
msgid ""
"Other CMake features now natively supported, like "
"``CMAKE_INTERPROCEDURAL_OPTIMIZATION``, ``set(CMAKE_CXX_VISIBILITY_PRESET"
" hidden)``."
msgstr ""

#: ../../changelog.rst:1305
msgid "``CUDA`` as a language is now supported."
msgstr ""

#: ../../changelog.rst:1307
msgid ""
"Helper functions ``pybind11_strip``, ``pybind11_extension``, "
"``pybind11_find_import`` added, see :doc:`cmake/index`."
msgstr ""

#: ../../changelog.rst:1310
msgid ""
"Optional :ref:`find-python-mode` and :ref:`nopython-mode` with CMake. "
"`#2370 <https://github.com/pybind/pybind11/pull/2370>`_"
msgstr ""

#: ../../changelog.rst:1313
msgid ""
"Uninstall target added. `#2265 "
"<https://github.com/pybind/pybind11/pull/2265>`_ and `#2346 "
"<https://github.com/pybind/pybind11/pull/2346>`_"
msgstr ""

#: ../../changelog.rst:1317
#, python-format
msgid ""
"``pybind11_add_module()`` now accepts an optional ``OPT_SIZE`` flag that "
"switches the binding target to size-based optimization if the global "
"build type can not always be fixed to ``MinSizeRel`` (except in debug "
"mode, where optimizations remain disabled).  ``MinSizeRel`` or this flag "
"reduces binary size quite substantially (~25% on some platforms). `#2463 "
"<https://github.com/pybind/pybind11/pull/2463>`_"
msgstr ""

#: ../../changelog.rst:1324
msgid "Smaller or developer focused features and fixes:"
msgstr ""

#: ../../changelog.rst:1326
msgid ""
"Moved ``mkdoc.py`` to a new repo, `pybind11-mkdoc`_. There are no longer "
"submodules in the main repo."
msgstr ""

#: ../../changelog.rst:1329
msgid ""
"``py::memoryview`` segfault fix and update, with new "
"``py::memoryview::from_memory`` in Python 3, and documentation. `#2223 "
"<https://github.com/pybind/pybind11/pull/2223>`_"
msgstr ""

#: ../../changelog.rst:1333
msgid ""
"Fix for ``buffer_info`` on Python 2. `#2503 "
"<https://github.com/pybind/pybind11/pull/2503>`_"
msgstr ""

#: ../../changelog.rst:1336
msgid ""
"If ``__eq__`` defined but not ``__hash__``, ``__hash__`` is now set to "
"``None``. `#2291 <https://github.com/pybind/pybind11/pull/2291>`_"
msgstr ""

#: ../../changelog.rst:1340
msgid ""
"``py::ellipsis`` now also works on Python 2. `#2360 "
"<https://github.com/pybind/pybind11/pull/2360>`_"
msgstr ""

#: ../../changelog.rst:1343
msgid ""
"Pointer to ``std::tuple`` & ``std::pair`` supported in cast. `#2334 "
"<https://github.com/pybind/pybind11/pull/2334>`_"
msgstr ""

#: ../../changelog.rst:1346
msgid ""
"Small fixes in NumPy support. ``py::array`` now uses ``py::ssize_t`` as "
"first argument type. `#2293 "
"<https://github.com/pybind/pybind11/pull/2293>`_"
msgstr ""

#: ../../changelog.rst:1350
msgid ""
"Added missing signature for ``py::array``. `#2363 "
"<https://github.com/pybind/pybind11/pull/2363>`_"
msgstr ""

#: ../../changelog.rst:1353
msgid ""
"``unchecked_mutable_reference`` has access to operator ``()`` and ``[]`` "
"when const. `#2514 <https://github.com/pybind/pybind11/pull/2514>`_"
msgstr ""

#: ../../changelog.rst:1357
msgid ""
"``py::vectorize`` is now supported on functions that return void. `#1969 "
"<https://github.com/pybind/pybind11/pull/1969>`_"
msgstr ""

#: ../../changelog.rst:1360
msgid ""
"``py::capsule`` supports ``get_pointer`` and ``set_pointer``. `#1131 "
"<https://github.com/pybind/pybind11/pull/1131>`_"
msgstr ""

#: ../../changelog.rst:1363
msgid ""
"Fix crash when different instances share the same pointer of the same "
"type. `#2252 <https://github.com/pybind/pybind11/pull/2252>`_"
msgstr ""

#: ../../changelog.rst:1366
msgid ""
"Fix for ``py::len`` not clearing Python's error state when it fails and "
"throws. `#2575 <https://github.com/pybind/pybind11/pull/2575>`_"
msgstr ""

#: ../../changelog.rst:1369
msgid ""
"Bugfixes related to more extensive testing, new GitHub Actions CI. `#2321"
" <https://github.com/pybind/pybind11/pull/2321>`_"
msgstr ""

#: ../../changelog.rst:1372
msgid ""
"Bug in timezone issue in Eastern hemisphere midnight fixed. `#2438 "
"<https://github.com/pybind/pybind11/pull/2438>`_"
msgstr ""

#: ../../changelog.rst:1375
msgid ""
"``std::chrono::time_point`` now works when the resolution is not the same"
" as the system. `#2481 <https://github.com/pybind/pybind11/pull/2481>`_"
msgstr ""

#: ../../changelog.rst:1379
msgid ""
"Bug fixed where ``py::array_t`` could accept arrays that did not match "
"the requested ordering. `#2484 "
"<https://github.com/pybind/pybind11/pull/2484>`_"
msgstr ""

#: ../../changelog.rst:1383
msgid ""
"Avoid a segfault on some compilers when types are removed in Python. "
"`#2564 <https://github.com/pybind/pybind11/pull/2564>`_"
msgstr ""

#: ../../changelog.rst:1386
msgid ""
"``py::arg::none()`` is now also respected when passing keyword arguments."
" `#2611 <https://github.com/pybind/pybind11/pull/2611>`_"
msgstr ""

#: ../../changelog.rst:1389
msgid ""
"PyPy fixes, PyPy 7.3.x now supported, including PyPy3. (Known issue with "
"PyPy2 and Windows `#2596 "
"<https://github.com/pybind/pybind11/issues/2596>`_). `#2146 "
"<https://github.com/pybind/pybind11/pull/2146>`_"
msgstr ""

#: ../../changelog.rst:1393
msgid ""
"CPython 3.9.0 workaround for undefined behavior (macOS segfault). `#2576 "
"<https://github.com/pybind/pybind11/pull/2576>`_"
msgstr ""

#: ../../changelog.rst:1396
msgid ""
"CPython 3.9 warning fixes. `#2253 "
"<https://github.com/pybind/pybind11/pull/2253>`_"
msgstr ""

#: ../../changelog.rst:1399
msgid ""
"Improved C++20 support, now tested in CI. `#2489 "
"<https://github.com/pybind/pybind11/pull/2489>`_ `#2599 "
"<https://github.com/pybind/pybind11/pull/2599>`_"
msgstr ""

#: ../../changelog.rst:1403
msgid ""
"Improved but still incomplete debug Python interpreter support. `#2025 "
"<https://github.com/pybind/pybind11/pull/2025>`_"
msgstr ""

#: ../../changelog.rst:1406
msgid ""
"NVCC (CUDA 11) now supported and tested in CI. `#2461 "
"<https://github.com/pybind/pybind11/pull/2461>`_"
msgstr ""

#: ../../changelog.rst:1409
msgid ""
"NVIDIA PGI compilers now supported and tested in CI. `#2475 "
"<https://github.com/pybind/pybind11/pull/2475>`_"
msgstr ""

#: ../../changelog.rst:1412
msgid ""
"At least Intel 18 now explicitly required when compiling with Intel. "
"`#2577 <https://github.com/pybind/pybind11/pull/2577>`_"
msgstr ""

#: ../../changelog.rst:1415
msgid ""
"Extensive style checking in CI, with `pre-commit`_ support. Code "
"modernization, checked by clang-tidy."
msgstr ""

#: ../../changelog.rst:1418
msgid ""
"Expanded docs, including new main page, new installing section, and CMake"
" helpers page, along with over a dozen new sections on existing pages."
msgstr ""

#: ../../changelog.rst:1421
msgid "In GitHub, new docs for contributing and new issue templates."
msgstr ""

#: ../../changelog.rst:1428
msgid "v2.5.0 (Mar 31, 2020)"
msgstr ""

#: ../../changelog.rst:1430
msgid ""
"Use C++17 fold expressions in type casters, if available. This can "
"improve performance during overload resolution when functions have "
"multiple arguments. `#2043 "
"<https://github.com/pybind/pybind11/pull/2043>`_."
msgstr ""

#: ../../changelog.rst:1435
msgid ""
"Changed include directory resolution in ``pybind11/__init__.py`` and "
"installation in ``setup.py``. This fixes a number of open issues where "
"pybind11 headers could not be found in certain environments. `#1995 "
"<https://github.com/pybind/pybind11/pull/1995>`_."
msgstr ""

#: ../../changelog.rst:1440
msgid ""
"C++20 ``char8_t`` and ``u8string`` support. `#2026 "
"<https://github.com/pybind/pybind11/pull/2026>`_."
msgstr ""

#: ../../changelog.rst:1443
msgid ""
"CMake: search for Python 3.9. `bb9c91 "
"<https://github.com/pybind/pybind11/commit/bb9c91>`_."
msgstr ""

#: ../../changelog.rst:1446
msgid ""
"Fixes for MSYS-based build environments. `#2087 "
"<https://github.com/pybind/pybind11/pull/2087>`_, `#2053 "
"<https://github.com/pybind/pybind11/pull/2053>`_."
msgstr ""

#: ../../changelog.rst:1450
msgid ""
"STL bindings for ``std::vector<...>::clear``. `#2074 "
"<https://github.com/pybind/pybind11/pull/2074>`_."
msgstr ""

#: ../../changelog.rst:1453
msgid ""
"Read-only flag for ``py::buffer``. `#1466 "
"<https://github.com/pybind/pybind11/pull/1466>`_."
msgstr ""

#: ../../changelog.rst:1456
msgid ""
"Exception handling during module initialization. `bf2b031 "
"<https://github.com/pybind/pybind11/commit/bf2b031>`_."
msgstr ""

#: ../../changelog.rst:1459
msgid ""
"Support linking against a CPython debug build. `#2025 "
"<https://github.com/pybind/pybind11/pull/2025>`_."
msgstr ""

#: ../../changelog.rst:1462
msgid ""
"Fixed issues involving the availability and use of aligned ``new`` and "
"``delete``. `#1988 <https://github.com/pybind/pybind11/pull/1988>`_, "
"`759221 <https://github.com/pybind/pybind11/commit/759221>`_."
msgstr ""

#: ../../changelog.rst:1466
msgid ""
"Fixed a resource leak upon interpreter shutdown. `#2020 "
"<https://github.com/pybind/pybind11/pull/2020>`_."
msgstr ""

#: ../../changelog.rst:1469
msgid ""
"Fixed error handling in the boolean caster. `#1976 "
"<https://github.com/pybind/pybind11/pull/1976>`_."
msgstr ""

#: ../../changelog.rst:1473
msgid "v2.4.3 (Oct 15, 2019)"
msgstr ""

#: ../../changelog.rst:1475
msgid ""
"Adapt pybind11 to a C API convention change in Python 3.8. `#1950 "
"<https://github.com/pybind/pybind11/pull/1950>`_."
msgstr ""

#: ../../changelog.rst:1479
msgid "v2.4.2 (Sep 21, 2019)"
msgstr ""

#: ../../changelog.rst:1481
msgid ""
"Replaced usage of a C++14 only construct. `#1929 "
"<https://github.com/pybind/pybind11/pull/1929>`_."
msgstr ""

#: ../../changelog.rst:1484
msgid ""
"Made an ifdef future-proof for Python >= 4. `f3109d "
"<https://github.com/pybind/pybind11/commit/f3109d>`_."
msgstr ""

#: ../../changelog.rst:1488
msgid "v2.4.1 (Sep 20, 2019)"
msgstr ""

#: ../../changelog.rst:1490
msgid ""
"Fixed a problem involving implicit conversion from enumerations to "
"integers on Python 3.8. `#1780 "
"<https://github.com/pybind/pybind11/pull/1780>`_."
msgstr ""

#: ../../changelog.rst:1494
msgid "v2.4.0 (Sep 19, 2019)"
msgstr ""

#: ../../changelog.rst:1496
msgid ""
"Try harder to keep pybind11-internal data structures separate when there "
"are potential ABI incompatibilities. Fixes crashes that occurred when "
"loading multiple pybind11 extensions that were e.g. compiled by GCC "
"(libstdc++) and Clang (libc++). `#1588 "
"<https://github.com/pybind/pybind11/pull/1588>`_ and `c9f5a "
"<https://github.com/pybind/pybind11/commit/c9f5a>`_."
msgstr ""

#: ../../changelog.rst:1503
msgid ""
"Added support for ``__await__``, ``__aiter__``, and ``__anext__`` "
"protocols. `#1842 <https://github.com/pybind/pybind11/pull/1842>`_."
msgstr ""

#: ../../changelog.rst:1506
msgid ""
"``pybind11_add_module()``: don't strip symbols when compiling in "
"``RelWithDebInfo`` mode. `#1980 "
"<https://github.com/pybind/pybind11/pull/1980>`_."
msgstr ""

#: ../../changelog.rst:1510
msgid ""
"``enum_``: Reproduce Python behavior when comparing against invalid "
"values (e.g. ``None``, strings, etc.). Add back support for "
"``__invert__()``. `#1912 "
"<https://github.com/pybind/pybind11/pull/1912>`_, `#1907 "
"<https://github.com/pybind/pybind11/pull/1907>`_."
msgstr ""

#: ../../changelog.rst:1515
msgid ""
"List insertion operation for ``py::list``. Added ``.empty()`` to all "
"collection types. Added ``py::set::contains()`` and "
"``py::dict::contains()``. `#1887 "
"<https://github.com/pybind/pybind11/pull/1887>`_, `#1884 "
"<https://github.com/pybind/pybind11/pull/1884>`_, `#1888 "
"<https://github.com/pybind/pybind11/pull/1888>`_."
msgstr ""

#: ../../changelog.rst:1522
msgid ""
"``py::details::overload_cast_impl`` is available in C++11 mode, can be "
"used like ``overload_cast`` with an additional set of parentheses. `#1581"
" <https://github.com/pybind/pybind11/pull/1581>`_."
msgstr ""

#: ../../changelog.rst:1526
msgid ""
"Fixed ``get_include()`` on Conda. `#1877 "
"<https://github.com/pybind/pybind11/pull/1877>`_."
msgstr ""

#: ../../changelog.rst:1529
msgid ""
"``stl_bind.h``: negative indexing support. `#1882 "
"<https://github.com/pybind/pybind11/pull/1882>`_."
msgstr ""

#: ../../changelog.rst:1532
msgid ""
"Minor CMake fix to add MinGW compatibility. `#1851 "
"<https://github.com/pybind/pybind11/pull/1851>`_."
msgstr ""

#: ../../changelog.rst:1535
msgid ""
"GIL-related fixes. `#1836 "
"<https://github.com/pybind/pybind11/pull/1836>`_, `8b90b "
"<https://github.com/pybind/pybind11/commit/8b90b>`_."
msgstr ""

#: ../../changelog.rst:1539
msgid ""
"Other very minor/subtle fixes and improvements. `#1329 "
"<https://github.com/pybind/pybind11/pull/1329>`_, `#1910 "
"<https://github.com/pybind/pybind11/pull/1910>`_, `#1863 "
"<https://github.com/pybind/pybind11/pull/1863>`_, `#1847 "
"<https://github.com/pybind/pybind11/pull/1847>`_, `#1890 "
"<https://github.com/pybind/pybind11/pull/1890>`_, `#1860 "
"<https://github.com/pybind/pybind11/pull/1860>`_, `#1848 "
"<https://github.com/pybind/pybind11/pull/1848>`_, `#1821 "
"<https://github.com/pybind/pybind11/pull/1821>`_, `#1837 "
"<https://github.com/pybind/pybind11/pull/1837>`_, `#1833 "
"<https://github.com/pybind/pybind11/pull/1833>`_, `#1748 "
"<https://github.com/pybind/pybind11/pull/1748>`_, `#1852 "
"<https://github.com/pybind/pybind11/pull/1852>`_."
msgstr ""

#: ../../changelog.rst:1554
msgid "v2.3.0 (June 11, 2019)"
msgstr ""

#: ../../changelog.rst:1556
msgid ""
"Significantly reduced module binary size (10-20%) when compiled in C++11 "
"mode with GCC/Clang, or in any mode with MSVC. Function signatures are "
"now always precomputed at compile time (this was previously only "
"available in C++14 mode for non-MSVC compilers). `#934 "
"<https://github.com/pybind/pybind11/pull/934>`_."
msgstr ""

#: ../../changelog.rst:1562
msgid ""
"Add basic support for tag-based static polymorphism, where classes "
"provide a method to returns the desired type of an instance. `#1326 "
"<https://github.com/pybind/pybind11/pull/1326>`_."
msgstr ""

#: ../../changelog.rst:1566
msgid ""
"Python type wrappers (``py::handle``, ``py::object``, etc.) now support "
"map Python's number protocol onto C++ arithmetic operators such as "
"``operator+``, ``operator/=``, etc. `#1511 "
"<https://github.com/pybind/pybind11/pull/1511>`_."
msgstr ""

#: ../../changelog.rst:1571
msgid "A number of improvements related to enumerations:"
msgstr ""

#: ../../changelog.rst:1573
msgid ""
"The ``enum_`` implementation was rewritten from scratch to reduce code "
"bloat. Rather than instantiating a full implementation for each "
"enumeration, most code is now contained in a generic base class. `#1511 "
"<https://github.com/pybind/pybind11/pull/1511>`_."
msgstr ""

#: ../../changelog.rst:1578
msgid ""
"The ``value()``  method of ``py::enum_`` now accepts an optional "
"docstring that will be shown in the documentation of the associated "
"enumeration. `#1160 <https://github.com/pybind/pybind11/pull/1160>`_."
msgstr ""

#: ../../changelog.rst:1582
msgid ""
"check for already existing enum value and throw an error if present. "
"`#1453 <https://github.com/pybind/pybind11/pull/1453>`_."
msgstr ""

#: ../../changelog.rst:1585
msgid ""
"Support for over-aligned type allocation via C++17's aligned ``new`` "
"statement. `#1582 <https://github.com/pybind/pybind11/pull/1582>`_."
msgstr ""

#: ../../changelog.rst:1588
msgid ""
"Added ``py::ellipsis()`` method for slicing of multidimensional NumPy "
"arrays `#1502 <https://github.com/pybind/pybind11/pull/1502>`_."
msgstr ""

#: ../../changelog.rst:1591
msgid ""
"Numerous Improvements to the ``mkdoc.py`` script for extracting "
"documentation from C++ header files. `#1788 "
"<https://github.com/pybind/pybind11/pull/1788>`_."
msgstr ""

#: ../../changelog.rst:1595
msgid ""
"``pybind11_add_module()``: allow including Python as a ``SYSTEM`` include"
" path. `#1416 <https://github.com/pybind/pybind11/pull/1416>`_."
msgstr ""

#: ../../changelog.rst:1598
msgid ""
"``pybind11/stl.h`` does not convert strings to ``vector<string>`` "
"anymore. `#1258 <https://github.com/pybind/pybind11/issues/1258>`_."
msgstr ""

#: ../../changelog.rst:1601
msgid ""
"Mark static methods as such to fix auto-generated Sphinx documentation. "
"`#1732 <https://github.com/pybind/pybind11/pull/1732>`_."
msgstr ""

#: ../../changelog.rst:1604
msgid ""
"Re-throw forced unwind exceptions (e.g. during pthread termination). "
"`#1208 <https://github.com/pybind/pybind11/pull/1208>`_."
msgstr ""

#: ../../changelog.rst:1607
msgid ""
"Added ``__contains__`` method to the bindings of maps (``std::map``, "
"``std::unordered_map``). `#1767 "
"<https://github.com/pybind/pybind11/pull/1767>`_."
msgstr ""

#: ../../changelog.rst:1611
msgid ""
"Improvements to ``gil_scoped_acquire``. `#1211 "
"<https://github.com/pybind/pybind11/pull/1211>`_."
msgstr ""

#: ../../changelog.rst:1614
msgid ""
"Type caster support for ``std::deque<T>``. `#1609 "
"<https://github.com/pybind/pybind11/pull/1609>`_."
msgstr ""

#: ../../changelog.rst:1617
msgid ""
"Support for ``std::unique_ptr`` holders, whose deleters differ between a "
"base and derived class. `#1353 "
"<https://github.com/pybind/pybind11/pull/1353>`_."
msgstr ""

#: ../../changelog.rst:1620
msgid ""
"Construction of STL array/vector-like data structures from iterators. "
"Added an ``extend()`` operation. `#1709 "
"<https://github.com/pybind/pybind11/pull/1709>`_,"
msgstr ""

#: ../../changelog.rst:1624
msgid ""
"CMake build system improvements for projects that include non-C++ files "
"(e.g. plain C, CUDA) in ``pybind11_add_module`` et al. `#1678 "
"<https://github.com/pybind/pybind11/pull/1678>`_."
msgstr ""

#: ../../changelog.rst:1628
msgid ""
"Fixed asynchronous invocation and deallocation of Python functions "
"wrapped in ``std::function``. `#1595 "
"<https://github.com/pybind/pybind11/pull/1595>`_."
msgstr ""

#: ../../changelog.rst:1632
msgid ""
"Fixes regarding return value policy propagation in STL type casters. "
"`#1603 <https://github.com/pybind/pybind11/pull/1603>`_."
msgstr ""

#: ../../changelog.rst:1635
msgid ""
"Fixed scoped enum comparisons. `#1571 "
"<https://github.com/pybind/pybind11/pull/1571>`_."
msgstr ""

#: ../../changelog.rst:1638
msgid ""
"Fixed iostream redirection for code that releases the GIL. `#1368 "
"<https://github.com/pybind/pybind11/pull/1368>`_,"
msgstr ""

#: ../../changelog.rst:1641
msgid ""
"A number of CI-related fixes. `#1757 "
"<https://github.com/pybind/pybind11/pull/1757>`_, `#1744 "
"<https://github.com/pybind/pybind11/pull/1744>`_, `#1670 "
"<https://github.com/pybind/pybind11/pull/1670>`_."
msgstr ""

#: ../../changelog.rst:1647
msgid "v2.2.4 (September 11, 2018)"
msgstr ""

#: ../../changelog.rst:1649
msgid ""
"Use new Python 3.7 Thread Specific Storage (TSS) implementation if "
"available. `#1454 <https://github.com/pybind/pybind11/pull/1454>`_, "
"`#1517 <https://github.com/pybind/pybind11/pull/1517>`_."
msgstr ""

#: ../../changelog.rst:1653
msgid ""
"Fixes for newer MSVC versions and C++17 mode. `#1347 "
"<https://github.com/pybind/pybind11/pull/1347>`_, `#1462 "
"<https://github.com/pybind/pybind11/pull/1462>`_."
msgstr ""

#: ../../changelog.rst:1657
msgid ""
"Propagate return value policies to type-specific casters when casting STL"
" containers. `#1455 <https://github.com/pybind/pybind11/pull/1455>`_."
msgstr ""

#: ../../changelog.rst:1661
msgid ""
"Allow ostream-redirection of more than 1024 characters. `#1479 "
"<https://github.com/pybind/pybind11/pull/1479>`_."
msgstr ""

#: ../../changelog.rst:1664
msgid ""
"Set ``Py_DEBUG`` define when compiling against a debug Python build. "
"`#1438 <https://github.com/pybind/pybind11/pull/1438>`_."
msgstr ""

#: ../../changelog.rst:1667
msgid ""
"Untangle integer logic in number type caster to work for custom types "
"that may only be castable to a restricted set of builtin types. `#1442 "
"<https://github.com/pybind/pybind11/pull/1442>`_."
msgstr ""

#: ../../changelog.rst:1671
msgid ""
"CMake build system: Remember Python version in cache file. `#1434 "
"<https://github.com/pybind/pybind11/pull/1434>`_."
msgstr ""

#: ../../changelog.rst:1674
msgid ""
"Fix for custom smart pointers: use ``std::addressof`` to obtain holder "
"address instead of ``operator&``. `#1435 "
"<https://github.com/pybind/pybind11/pull/1435>`_."
msgstr ""

#: ../../changelog.rst:1678
msgid ""
"Properly report exceptions thrown during module initialization. `#1362 "
"<https://github.com/pybind/pybind11/pull/1362>`_."
msgstr ""

#: ../../changelog.rst:1681
msgid ""
"Fixed a segmentation fault when creating empty-shaped NumPy array. `#1371"
" <https://github.com/pybind/pybind11/pull/1371>`_."
msgstr ""

#: ../../changelog.rst:1684
msgid ""
"The version of Intel C++ compiler must be >= 2017, and this is now "
"checked by the header files. `#1363 "
"<https://github.com/pybind/pybind11/pull/1363>`_."
msgstr ""

#: ../../changelog.rst:1687
msgid ""
"A few minor typo fixes and improvements to the test suite, and patches "
"that silence compiler warnings."
msgstr ""

#: ../../changelog.rst:1690
msgid ""
"Vectors now support construction from generators, as well as ``extend()``"
" from a list or generator. `#1496 "
"<https://github.com/pybind/pybind11/pull/1496>`_."
msgstr ""

#: ../../changelog.rst:1696
msgid "v2.2.3 (April 29, 2018)"
msgstr ""

#: ../../changelog.rst:1698
msgid ""
"The pybind11 header location detection was replaced by a new "
"implementation that no longer depends on ``pip`` internals (the recently "
"released ``pip`` 10 has restricted access to this API). `#1190 "
"<https://github.com/pybind/pybind11/pull/1190>`_."
msgstr ""

#: ../../changelog.rst:1703
msgid ""
"Small adjustment to an implementation detail to work around a compiler "
"segmentation fault in Clang 3.3/3.4. `#1350 "
"<https://github.com/pybind/pybind11/pull/1350>`_."
msgstr ""

#: ../../changelog.rst:1706
msgid ""
"The minimal supported version of the Intel compiler was >= 17.0 since "
"pybind11 v2.1. This check is now explicit, and a compile-time error is "
"raised if the compiler meet the requirement. `#1363 "
"<https://github.com/pybind/pybind11/pull/1363>`_."
msgstr ""

#: ../../changelog.rst:1711
msgid ""
"Fixed an endianness-related fault in the test suite. `#1287 "
"<https://github.com/pybind/pybind11/pull/1287>`_."
msgstr ""

#: ../../changelog.rst:1715
msgid "v2.2.2 (February 7, 2018)"
msgstr ""

#: ../../changelog.rst:1717
msgid ""
"Fixed a segfault when combining embedded interpreter "
"shutdown/reinitialization with external loaded pybind11 modules. `#1092 "
"<https://github.com/pybind/pybind11/pull/1092>`_."
msgstr ""

#: ../../changelog.rst:1721
msgid ""
"Eigen support: fixed a bug where Nx1/1xN numpy inputs couldn't be passed "
"as arguments to Eigen vectors (which for Eigen are simply compile-time "
"fixed Nx1/1xN matrices). `#1106 "
"<https://github.com/pybind/pybind11/pull/1106>`_."
msgstr ""

#: ../../changelog.rst:1726
msgid ""
"Clarified to license by moving the licensing of contributions from "
"``LICENSE`` into ``CONTRIBUTING.md``: the licensing of contributions is "
"not actually part of the software license as distributed.  This isn't "
"meant to be a substantial change in the licensing of the project, but "
"addresses concerns that the clause made the license non-standard. `#1109 "
"<https://github.com/pybind/pybind11/issues/1109>`_."
msgstr ""

#: ../../changelog.rst:1733
msgid ""
"Fixed a regression introduced in 2.1 that broke binding functions with "
"lvalue character literal arguments. `#1128 "
"<https://github.com/pybind/pybind11/pull/1128>`_."
msgstr ""

#: ../../changelog.rst:1737
msgid ""
"MSVC: fix for compilation failures under /permissive-, and added the flag"
" to the appveyor test suite. `#1155 "
"<https://github.com/pybind/pybind11/pull/1155>`_."
msgstr ""

#: ../../changelog.rst:1741
msgid ""
"Fixed ``__qualname__`` generation, and in turn, fixes how class names "
"(especially nested class names) are shown in generated docstrings. `#1171"
" <https://github.com/pybind/pybind11/pull/1171>`_."
msgstr ""

#: ../../changelog.rst:1745
msgid ""
"Updated the FAQ with a suggested project citation reference. `#1189 "
"<https://github.com/pybind/pybind11/pull/1189>`_."
msgstr ""

#: ../../changelog.rst:1748
msgid ""
"Added fixes for deprecation warnings when compiled under C++17 with "
"``-Wdeprecated`` turned on, and add ``-Wdeprecated`` to the test suite "
"compilation flags. `#1191 "
"<https://github.com/pybind/pybind11/pull/1191>`_."
msgstr ""

#: ../../changelog.rst:1753
msgid ""
"Fixed outdated PyPI URLs in ``setup.py``. `#1213 "
"<https://github.com/pybind/pybind11/pull/1213>`_."
msgstr ""

#: ../../changelog.rst:1756
msgid ""
"Fixed a refcount leak for arguments that end up in a ``py::args`` "
"argument for functions with both fixed positional and ``py::args`` "
"arguments. `#1216 <https://github.com/pybind/pybind11/pull/1216>`_."
msgstr ""

#: ../../changelog.rst:1760
msgid ""
"Fixed a potential segfault resulting from possible premature destruction "
"of ``py::args``/``py::kwargs`` arguments with overloaded functions. "
"`#1223 <https://github.com/pybind/pybind11/pull/1223>`_."
msgstr ""

#: ../../changelog.rst:1764
msgid ""
"Fixed ``del map[item]`` for a ``stl_bind.h`` bound stl map. `#1229 "
"<https://github.com/pybind/pybind11/pull/1229>`_."
msgstr ""

#: ../../changelog.rst:1767
msgid ""
"Fixed a regression from v2.1.x where the aggregate initialization could "
"unintentionally end up at a constructor taking a templated "
"``std::initializer_list<T>`` argument. `#1249 "
"<https://github.com/pybind/pybind11/pull/1249>`_."
msgstr ""

#: ../../changelog.rst:1772
msgid ""
"Fixed an issue where calling a function with a keep_alive policy on the "
"same nurse/patient pair would cause the internal patient storage to "
"needlessly grow (unboundedly, if the nurse is long-lived). `#1251 "
"<https://github.com/pybind/pybind11/issues/1251>`_."
msgstr ""

#: ../../changelog.rst:1777
msgid "Various other minor fixes."
msgstr ""

#: ../../changelog.rst:1780
msgid "v2.2.1 (September 14, 2017)"
msgstr ""

#: ../../changelog.rst:1782
msgid ""
"Added ``py::module_::reload()`` member function for reloading a module. "
"`#1040 <https://github.com/pybind/pybind11/pull/1040>`_."
msgstr ""

#: ../../changelog.rst:1785
msgid ""
"Fixed a reference leak in the number converter. `#1078 "
"<https://github.com/pybind/pybind11/pull/1078>`_."
msgstr ""

#: ../../changelog.rst:1788
msgid ""
"Fixed compilation with Clang on host GCC < 5 (old libstdc++ which isn't "
"fully C++11 compliant). `#1062 "
"<https://github.com/pybind/pybind11/pull/1062>`_."
msgstr ""

#: ../../changelog.rst:1791
msgid ""
"Fixed a regression where the automatic ``std::vector<bool>`` caster would"
" fail to compile. The same fix also applies to any container which "
"returns element proxies instead of references. `#1053 "
"<https://github.com/pybind/pybind11/pull/1053>`_."
msgstr ""

#: ../../changelog.rst:1796
msgid ""
"Fixed a regression where the ``py::keep_alive`` policy could not be "
"applied to constructors. `#1065 "
"<https://github.com/pybind/pybind11/pull/1065>`_."
msgstr ""

#: ../../changelog.rst:1799
msgid ""
"Fixed a nullptr dereference when loading a ``py::module_local`` type "
"that's only registered in an external module. `#1058 "
"<https://github.com/pybind/pybind11/pull/1058>`_."
msgstr ""

#: ../../changelog.rst:1803
msgid ""
"Fixed implicit conversion of accessors to types derived from "
"``py::object``. `#1076 <https://github.com/pybind/pybind11/pull/1076>`_."
msgstr ""

#: ../../changelog.rst:1806
msgid ""
"The ``name`` in ``PYBIND11_MODULE(name, variable)`` can now be a macro. "
"`#1082 <https://github.com/pybind/pybind11/pull/1082>`_."
msgstr ""

#: ../../changelog.rst:1809
msgid ""
"Relaxed overly strict ``py::pickle()`` check for matching get and set "
"types. `#1064 <https://github.com/pybind/pybind11/pull/1064>`_."
msgstr ""

#: ../../changelog.rst:1812
msgid ""
"Conversion errors now try to be more informative when it's likely that a "
"missing header is the cause (e.g. forgetting ``<pybind11/stl.h>``). "
"`#1077 <https://github.com/pybind/pybind11/pull/1077>`_."
msgstr ""

#: ../../changelog.rst:1817
msgid "v2.2.0 (August 31, 2017)"
msgstr ""

#: ../../changelog.rst:1819
msgid ""
"Support for embedding the Python interpreter. See the :doc:`documentation"
" page </advanced/embedding>` for a full overview of the new features. "
"`#774 <https://github.com/pybind/pybind11/pull/774>`_, `#889 "
"<https://github.com/pybind/pybind11/pull/889>`_, `#892 "
"<https://github.com/pybind/pybind11/pull/892>`_, `#920 "
"<https://github.com/pybind/pybind11/pull/920>`_."
msgstr ""

#: ../../changelog.rst:1838
msgid ""
"Support for inheriting from multiple C++ bases in Python. `#693 "
"<https://github.com/pybind/pybind11/pull/693>`_."
msgstr ""

#: ../../changelog.rst:1851
msgid ""
"``PYBIND11_MODULE`` is now the preferred way to create module entry "
"points. ``PYBIND11_PLUGIN`` is deprecated. See :ref:`macros` for details."
" `#879 <https://github.com/pybind/pybind11/pull/879>`_."
msgstr ""

#: ../../changelog.rst:1869
msgid ""
"pybind11's headers and build system now more strictly enforce hidden "
"symbol visibility for extension modules. This should be seamless for most"
" users, but see the :doc:`upgrade` if you use a custom build system. "
"`#995 <https://github.com/pybind/pybind11/pull/995>`_."
msgstr ""

#: ../../changelog.rst:1874
msgid ""
"Support for ``py::module_local`` types which allow multiple modules to "
"export the same C++ types without conflicts. This is useful for opaque "
"types like ``std::vector<int>``. ``py::bind_vector`` and ``py::bind_map``"
" now default to ``py::module_local`` if their elements are builtins or "
"local types. See :ref:`module_local` for details. `#949 "
"<https://github.com/pybind/pybind11/pull/949>`_, `#981 "
"<https://github.com/pybind/pybind11/pull/981>`_, `#995 "
"<https://github.com/pybind/pybind11/pull/995>`_, `#997 "
"<https://github.com/pybind/pybind11/pull/997>`_."
msgstr ""

#: ../../changelog.rst:1884
msgid ""
"Custom constructors can now be added very easily using lambdas or factory"
" functions which return a class instance by value, pointer or holder. "
"This supersedes the old placement-new ``__init__`` technique. See "
":ref:`custom_constructors` for details. `#805 "
"<https://github.com/pybind/pybind11/pull/805>`_, `#1014 "
"<https://github.com/pybind/pybind11/pull/1014>`_."
msgstr ""

#: ../../changelog.rst:1903
msgid ""
"Similarly to custom constructors, pickling support functions are now "
"bound using the ``py::pickle()`` adaptor which improves type safety. See "
"the :doc:`upgrade` and :ref:`pickling` for details. `#1038 "
"<https://github.com/pybind/pybind11/pull/1038>`_."
msgstr ""

#: ../../changelog.rst:1908
msgid ""
"Builtin support for converting C++17 standard library types and general "
"conversion improvements:"
msgstr ""

#: ../../changelog.rst:1911
msgid ""
"C++17 ``std::variant`` is supported right out of the box. C++11/14 "
"equivalents (e.g. ``boost::variant``) can also be added with a simple "
"user-defined specialization. See :ref:`cpp17_container_casters` for "
"details. `#811 <https://github.com/pybind/pybind11/pull/811>`_, `#845 "
"<https://github.com/pybind/pybind11/pull/845>`_, `#989 "
"<https://github.com/pybind/pybind11/pull/989>`_."
msgstr ""

#: ../../changelog.rst:1918
msgid ""
"Out-of-the-box support for C++17 ``std::string_view``. `#906 "
"<https://github.com/pybind/pybind11/pull/906>`_."
msgstr ""

#: ../../changelog.rst:1921
msgid ""
"Improved compatibility of the builtin ``optional`` converter. `#874 "
"<https://github.com/pybind/pybind11/pull/874>`_."
msgstr ""

#: ../../changelog.rst:1924
msgid ""
"The ``bool`` converter now accepts ``numpy.bool_`` and types which define"
" ``__bool__`` (Python 3.x) or ``__nonzero__`` (Python 2.7). `#925 "
"<https://github.com/pybind/pybind11/pull/925>`_."
msgstr ""

#: ../../changelog.rst:1928
msgid ""
"C++-to-Python casters are now more efficient and move elements out of "
"rvalue containers whenever possible. `#851 "
"<https://github.com/pybind/pybind11/pull/851>`_, `#936 "
"<https://github.com/pybind/pybind11/pull/936>`_, `#938 "
"<https://github.com/pybind/pybind11/pull/938>`_."
msgstr ""

#: ../../changelog.rst:1934
msgid ""
"Fixed ``bytes`` to ``std::string/char*`` conversion on Python 3. `#817 "
"<https://github.com/pybind/pybind11/pull/817>`_."
msgstr ""

#: ../../changelog.rst:1937
msgid ""
"Fixed lifetime of temporary C++ objects created in Python-to-C++ "
"conversions. `#924 <https://github.com/pybind/pybind11/pull/924>`_."
msgstr ""

#: ../../changelog.rst:1940
msgid ""
"Scope guard call policy for RAII types, e.g. "
"``py::call_guard<py::gil_scoped_release>()``, "
"``py::call_guard<py::scoped_ostream_redirect>()``. See "
":ref:`call_policies` for details. `#740 "
"<https://github.com/pybind/pybind11/pull/740>`_."
msgstr ""

#: ../../changelog.rst:1944
msgid ""
"Utility for redirecting C++ streams to Python (e.g. ``std::cout`` -> "
"``sys.stdout``). Scope guard ``py::scoped_ostream_redirect`` in C++ and a"
" context manager in Python. See :ref:`ostream_redirect`. `#1009 "
"<https://github.com/pybind/pybind11/pull/1009>`_."
msgstr ""

#: ../../changelog.rst:1949
msgid ""
"Improved handling of types and exceptions across module boundaries. `#915"
" <https://github.com/pybind/pybind11/pull/915>`_, `#951 "
"<https://github.com/pybind/pybind11/pull/951>`_, `#995 "
"<https://github.com/pybind/pybind11/pull/995>`_."
msgstr ""

#: ../../changelog.rst:1954
msgid ""
"Fixed destruction order of ``py::keep_alive`` nurse/patient objects in "
"reference cycles. `#856 <https://github.com/pybind/pybind11/pull/856>`_."
msgstr ""

#: ../../changelog.rst:1958
msgid "NumPy and buffer protocol related improvements:"
msgstr ""

#: ../../changelog.rst:1960
msgid ""
"Support for negative strides in Python buffer objects/numpy arrays. This "
"required changing integers from unsigned to signed for the related C++ "
"APIs. Note: If you have compiler warnings enabled, you may notice some "
"new conversion warnings after upgrading. These can be resolved with "
"``static_cast``. `#782 <https://github.com/pybind/pybind11/pull/782>`_."
msgstr ""

#: ../../changelog.rst:1966
msgid ""
"Support ``std::complex`` and arrays inside ``PYBIND11_NUMPY_DTYPE``. "
"`#831 <https://github.com/pybind/pybind11/pull/831>`_, `#832 "
"<https://github.com/pybind/pybind11/pull/832>`_."
msgstr ""

#: ../../changelog.rst:1970
msgid ""
"Support for constructing ``py::buffer_info`` and ``py::arrays`` using "
"arbitrary containers or iterators instead of requiring a ``std::vector``."
" `#788 <https://github.com/pybind/pybind11/pull/788>`_, `#822 "
"<https://github.com/pybind/pybind11/pull/822>`_, `#860 "
"<https://github.com/pybind/pybind11/pull/860>`_."
msgstr ""

#: ../../changelog.rst:1976
msgid ""
"Explicitly check numpy version and require >= 1.7.0. `#819 "
"<https://github.com/pybind/pybind11/pull/819>`_."
msgstr ""

#: ../../changelog.rst:1979
msgid ""
"Support for allowing/prohibiting ``None`` for specific arguments and "
"improved ``None`` overload resolution order. See :ref:`none_arguments` "
"for details. `#843 <https://github.com/pybind/pybind11/pull/843>`_. `#859"
" <https://github.com/pybind/pybind11/pull/859>`_."
msgstr ""

#: ../../changelog.rst:1984
msgid ""
"Added ``py::exec()`` as a shortcut for "
"``py::eval<py::eval_statements>()`` and support for C++11 raw string "
"literals as input. See :ref:`eval`. `#766 "
"<https://github.com/pybind/pybind11/pull/766>`_, `#827 "
"<https://github.com/pybind/pybind11/pull/827>`_."
msgstr ""

#: ../../changelog.rst:1989
msgid ""
"``py::vectorize()`` ignores non-vectorizable arguments and supports "
"member functions. `#762 <https://github.com/pybind/pybind11/pull/762>`_."
msgstr ""

#: ../../changelog.rst:1993
msgid ""
"Support for bound methods as callbacks (``pybind11/functional.h``). `#815"
" <https://github.com/pybind/pybind11/pull/815>`_."
msgstr ""

#: ../../changelog.rst:1996
msgid ""
"Allow aliasing pybind11 methods: ``cls.attr(\"foo\") = "
"cls.attr(\"bar\")``. `#802 "
"<https://github.com/pybind/pybind11/pull/802>`_."
msgstr ""

#: ../../changelog.rst:1999
msgid ""
"Don't allow mixed static/non-static overloads. `#804 "
"<https://github.com/pybind/pybind11/pull/804>`_."
msgstr ""

#: ../../changelog.rst:2002
msgid ""
"Fixed overriding static properties in derived classes. `#784 "
"<https://github.com/pybind/pybind11/pull/784>`_."
msgstr ""

#: ../../changelog.rst:2005
msgid ""
"Added support for write only properties. `#1144 "
"<https://github.com/pybind/pybind11/pull/1144>`_."
msgstr ""

#: ../../changelog.rst:2008
msgid ""
"Improved deduction of member functions of a derived class when its bases "
"aren't registered with pybind11. `#855 "
"<https://github.com/pybind/pybind11/pull/855>`_."
msgstr ""

#: ../../changelog.rst:2024
msgid ""
"The implementation of ``py::init<>`` now uses C++11 brace initialization "
"syntax to construct instances, which permits binding implicit "
"constructors of aggregate types. `#1015 "
"<https://github.com/pybind/pybind11/pull/1015>`_."
msgstr ""

#: ../../changelog.rst:2038
msgid ""
"Fixed issues with multiple inheritance with offset base/derived pointers."
" `#812 <https://github.com/pybind/pybind11/pull/812>`_, `#866 "
"<https://github.com/pybind/pybind11/pull/866>`_, `#960 "
"<https://github.com/pybind/pybind11/pull/960>`_."
msgstr ""

#: ../../changelog.rst:2043
msgid ""
"Fixed reference leak of type objects. `#1030 "
"<https://github.com/pybind/pybind11/pull/1030>`_."
msgstr ""

#: ../../changelog.rst:2046
msgid ""
"Improved support for the ``/std:c++14`` and ``/std:c++latest`` modes on "
"MSVC 2017. `#841 <https://github.com/pybind/pybind11/pull/841>`_, `#999 "
"<https://github.com/pybind/pybind11/pull/999>`_."
msgstr ""

#: ../../changelog.rst:2051
msgid ""
"Fixed detection of private operator new on MSVC. `#893 "
"<https://github.com/pybind/pybind11/pull/893>`_, `#918 "
"<https://github.com/pybind/pybind11/pull/918>`_."
msgstr ""

#: ../../changelog.rst:2055
msgid ""
"Intel C++ compiler compatibility fixes. `#937 "
"<https://github.com/pybind/pybind11/pull/937>`_."
msgstr ""

#: ../../changelog.rst:2058
msgid ""
"Fixed implicit conversion of ``py::enum_`` to integer types on Python "
"2.7. `#821 <https://github.com/pybind/pybind11/pull/821>`_."
msgstr ""

#: ../../changelog.rst:2061
msgid ""
"Added ``py::hash`` to fetch the hash value of Python objects, and "
"``.def(hash(py::self))`` to provide the C++ ``std::hash`` as the Python "
"``__hash__`` method. `#1034 "
"<https://github.com/pybind/pybind11/pull/1034>`_."
msgstr ""

#: ../../changelog.rst:2066
msgid ""
"Fixed ``__truediv__`` on Python 2 and ``__itruediv__`` on Python 3. `#867"
" <https://github.com/pybind/pybind11/pull/867>`_."
msgstr ""

#: ../../changelog.rst:2069
msgid ""
"``py::capsule`` objects now support the ``name`` attribute. This is "
"useful for interfacing with ``scipy.LowLevelCallable``. `#902 "
"<https://github.com/pybind/pybind11/pull/902>`_."
msgstr ""

#: ../../changelog.rst:2073
msgid ""
"Fixed ``py::make_iterator``'s ``__next__()`` for past-the-end calls. "
"`#897 <https://github.com/pybind/pybind11/pull/897>`_."
msgstr ""

#: ../../changelog.rst:2076
msgid ""
"Added ``error_already_set::matches()`` for checking Python exceptions. "
"`#772 <https://github.com/pybind/pybind11/pull/772>`_."
msgstr ""

#: ../../changelog.rst:2079
msgid ""
"Deprecated ``py::error_already_set::clear()``. It's no longer needed "
"following a simplification of the ``py::error_already_set`` class. `#954 "
"<https://github.com/pybind/pybind11/pull/954>`_."
msgstr ""

#: ../../changelog.rst:2083
msgid ""
"Deprecated ``py::handle::operator==()`` in favor of ``py::handle::is()`` "
"`#825 <https://github.com/pybind/pybind11/pull/825>`_."
msgstr ""

#: ../../changelog.rst:2086
msgid ""
"Deprecated ``py::object::borrowed``/``py::object::stolen``. Use "
"``py::object::borrowed_t{}``/``py::object::stolen_t{}`` instead. `#771 "
"<https://github.com/pybind/pybind11/pull/771>`_."
msgstr ""

#: ../../changelog.rst:2090
msgid ""
"Changed internal data structure versioning to avoid conflicts between "
"modules compiled with different revisions of pybind11. `#1012 "
"<https://github.com/pybind/pybind11/pull/1012>`_."
msgstr ""

#: ../../changelog.rst:2094
msgid ""
"Additional compile-time and run-time error checking and more informative "
"messages. `#786 <https://github.com/pybind/pybind11/pull/786>`_, `#794 "
"<https://github.com/pybind/pybind11/pull/794>`_, `#803 "
"<https://github.com/pybind/pybind11/pull/803>`_."
msgstr ""

#: ../../changelog.rst:2099
msgid ""
"Various minor improvements and fixes. `#764 "
"<https://github.com/pybind/pybind11/pull/764>`_, `#791 "
"<https://github.com/pybind/pybind11/pull/791>`_, `#795 "
"<https://github.com/pybind/pybind11/pull/795>`_, `#840 "
"<https://github.com/pybind/pybind11/pull/840>`_, `#844 "
"<https://github.com/pybind/pybind11/pull/844>`_, `#846 "
"<https://github.com/pybind/pybind11/pull/846>`_, `#849 "
"<https://github.com/pybind/pybind11/pull/849>`_, `#858 "
"<https://github.com/pybind/pybind11/pull/858>`_, `#862 "
"<https://github.com/pybind/pybind11/pull/862>`_, `#871 "
"<https://github.com/pybind/pybind11/pull/871>`_, `#872 "
"<https://github.com/pybind/pybind11/pull/872>`_, `#881 "
"<https://github.com/pybind/pybind11/pull/881>`_, `#888 "
"<https://github.com/pybind/pybind11/pull/888>`_, `#899 "
"<https://github.com/pybind/pybind11/pull/899>`_, `#928 "
"<https://github.com/pybind/pybind11/pull/928>`_, `#931 "
"<https://github.com/pybind/pybind11/pull/931>`_, `#944 "
"<https://github.com/pybind/pybind11/pull/944>`_, `#950 "
"<https://github.com/pybind/pybind11/pull/950>`_, `#952 "
"<https://github.com/pybind/pybind11/pull/952>`_, `#962 "
"<https://github.com/pybind/pybind11/pull/962>`_, `#965 "
"<https://github.com/pybind/pybind11/pull/965>`_, `#970 "
"<https://github.com/pybind/pybind11/pull/970>`_, `#978 "
"<https://github.com/pybind/pybind11/pull/978>`_, `#979 "
"<https://github.com/pybind/pybind11/pull/979>`_, `#986 "
"<https://github.com/pybind/pybind11/pull/986>`_, `#1020 "
"<https://github.com/pybind/pybind11/pull/1020>`_, `#1027 "
"<https://github.com/pybind/pybind11/pull/1027>`_, `#1037 "
"<https://github.com/pybind/pybind11/pull/1037>`_."
msgstr ""

#: ../../changelog.rst:2129
msgid ""
"Testing improvements. `#798 "
"<https://github.com/pybind/pybind11/pull/798>`_, `#882 "
"<https://github.com/pybind/pybind11/pull/882>`_, `#898 "
"<https://github.com/pybind/pybind11/pull/898>`_, `#900 "
"<https://github.com/pybind/pybind11/pull/900>`_, `#921 "
"<https://github.com/pybind/pybind11/pull/921>`_, `#923 "
"<https://github.com/pybind/pybind11/pull/923>`_, `#963 "
"<https://github.com/pybind/pybind11/pull/963>`_."
msgstr ""

#: ../../changelog.rst:2139
msgid "v2.1.1 (April 7, 2017)"
msgstr ""

#: ../../changelog.rst:2141
msgid ""
"Fixed minimum version requirement for MSVC 2015u3 `#773 "
"<https://github.com/pybind/pybind11/pull/773>`_."
msgstr ""

#: ../../changelog.rst:2145
msgid "v2.1.0 (March 22, 2017)"
msgstr ""

#: ../../changelog.rst:2147
msgid ""
"pybind11 now performs function overload resolution in two phases. The "
"first phase only considers exact type matches, while the second allows "
"for implicit conversions to take place. A special ``noconvert()`` syntax "
"can be used to completely disable implicit conversions for specific "
"arguments. `#643 <https://github.com/pybind/pybind11/pull/643>`_, `#634 "
"<https://github.com/pybind/pybind11/pull/634>`_, `#650 "
"<https://github.com/pybind/pybind11/pull/650>`_."
msgstr ""

#: ../../changelog.rst:2155
msgid ""
"Fixed a regression where static properties no longer worked with classes "
"using multiple inheritance. The ``py::metaclass`` attribute is no longer "
"necessary (and deprecated as of this release) when binding classes with "
"static properties. `#679 <https://github.com/pybind/pybind11/pull/679>`_,"
msgstr ""

#: ../../changelog.rst:2161
msgid ""
"Classes bound using ``pybind11`` can now use custom metaclasses. `#679 "
"<https://github.com/pybind/pybind11/pull/679>`_,"
msgstr ""

#: ../../changelog.rst:2164
msgid ""
"``py::args`` and ``py::kwargs`` can now be mixed with other positional "
"arguments when binding functions using pybind11. `#611 "
"<https://github.com/pybind/pybind11/pull/611>`_."
msgstr ""

#: ../../changelog.rst:2168
msgid ""
"Improved support for C++11 unicode string and character types; added "
"extensive documentation regarding pybind11's string conversion behavior. "
"`#624 <https://github.com/pybind/pybind11/pull/624>`_, `#636 "
"<https://github.com/pybind/pybind11/pull/636>`_, `#715 "
"<https://github.com/pybind/pybind11/pull/715>`_."
msgstr ""

#: ../../changelog.rst:2174
msgid ""
"pybind11 can now avoid expensive copies when converting Eigen arrays to "
"NumPy arrays (and vice versa). `#610 "
"<https://github.com/pybind/pybind11/pull/610>`_."
msgstr ""

#: ../../changelog.rst:2177
msgid ""
"The \"fast path\" in ``py::vectorize`` now works for any full-size group "
"of C or F-contiguous arrays. The non-fast path is also faster since it no"
" longer performs copies of the input arguments (except when type "
"conversions are necessary). `#610 "
"<https://github.com/pybind/pybind11/pull/610>`_."
msgstr ""

#: ../../changelog.rst:2182
msgid ""
"Added fast, unchecked access to NumPy arrays via a proxy object. `#746 "
"<https://github.com/pybind/pybind11/pull/746>`_."
msgstr ""

#: ../../changelog.rst:2185
msgid ""
"Transparent support for class-specific ``operator new`` and ``operator "
"delete`` implementations. `#755 "
"<https://github.com/pybind/pybind11/pull/755>`_."
msgstr ""

#: ../../changelog.rst:2189
msgid ""
"Slimmer and more efficient STL-compatible iterator interface for sequence"
" types. `#662 <https://github.com/pybind/pybind11/pull/662>`_."
msgstr ""

#: ../../changelog.rst:2192
msgid ""
"Improved custom holder type support. `#607 "
"<https://github.com/pybind/pybind11/pull/607>`_."
msgstr ""

#: ../../changelog.rst:2195
msgid ""
"``nullptr`` to ``None`` conversion fixed in various builtin type casters."
" `#732 <https://github.com/pybind/pybind11/pull/732>`_."
msgstr ""

#: ../../changelog.rst:2198
msgid ""
"``enum_`` now exposes its members via a special ``__members__`` "
"attribute. `#666 <https://github.com/pybind/pybind11/pull/666>`_."
msgstr ""

#: ../../changelog.rst:2201
msgid ""
"``std::vector`` bindings created using ``stl_bind.h`` can now optionally "
"implement the buffer protocol. `#488 "
"<https://github.com/pybind/pybind11/pull/488>`_."
msgstr ""

#: ../../changelog.rst:2204
msgid ""
"Automated C++ reference documentation using doxygen and breathe. `#598 "
"<https://github.com/pybind/pybind11/pull/598>`_."
msgstr ""

#: ../../changelog.rst:2207
msgid ""
"Added minimum compiler version assertions. `#727 "
"<https://github.com/pybind/pybind11/pull/727>`_."
msgstr ""

#: ../../changelog.rst:2210
msgid ""
"Improved compatibility with C++1z. `#677 "
"<https://github.com/pybind/pybind11/pull/677>`_."
msgstr ""

#: ../../changelog.rst:2213
msgid ""
"Improved ``py::capsule`` API. Can be used to implement cleanup callbacks "
"that are involved at module destruction time. `#752 "
"<https://github.com/pybind/pybind11/pull/752>`_."
msgstr ""

#: ../../changelog.rst:2217
msgid ""
"Various minor improvements and fixes. `#595 "
"<https://github.com/pybind/pybind11/pull/595>`_, `#588 "
"<https://github.com/pybind/pybind11/pull/588>`_, `#589 "
"<https://github.com/pybind/pybind11/pull/589>`_, `#603 "
"<https://github.com/pybind/pybind11/pull/603>`_, `#619 "
"<https://github.com/pybind/pybind11/pull/619>`_, `#648 "
"<https://github.com/pybind/pybind11/pull/648>`_, `#695 "
"<https://github.com/pybind/pybind11/pull/695>`_, `#720 "
"<https://github.com/pybind/pybind11/pull/720>`_, `#723 "
"<https://github.com/pybind/pybind11/pull/723>`_, `#729 "
"<https://github.com/pybind/pybind11/pull/729>`_, `#724 "
"<https://github.com/pybind/pybind11/pull/724>`_, `#742 "
"<https://github.com/pybind/pybind11/pull/742>`_, `#753 "
"<https://github.com/pybind/pybind11/pull/753>`_."
msgstr ""

#: ../../changelog.rst:2233
msgid "v2.0.1 (Jan 4, 2017)"
msgstr ""

#: ../../changelog.rst:2235
msgid ""
"Fix pointer to reference error in type_caster on MSVC `#583 "
"<https://github.com/pybind/pybind11/pull/583>`_."
msgstr ""

#: ../../changelog.rst:2238
msgid ""
"Fixed a segmentation in the test suite due to a typo `cd7eac "
"<https://github.com/pybind/pybind11/commit/cd7eac>`_."
msgstr ""

#: ../../changelog.rst:2242
msgid "v2.0.0 (Jan 1, 2017)"
msgstr ""

#: ../../changelog.rst:2244
msgid ""
"Fixed a reference counting regression affecting types with custom "
"metaclasses (introduced in v2.0.0-rc1). `#571 "
"<https://github.com/pybind/pybind11/pull/571>`_."
msgstr ""

#: ../../changelog.rst:2248
msgid ""
"Quenched a CMake policy warning. `#570 "
"<https://github.com/pybind/pybind11/pull/570>`_."
msgstr ""

#: ../../changelog.rst:2252
msgid "v2.0.0-rc1 (Dec 23, 2016)"
msgstr ""

#: ../../changelog.rst:2254
msgid ""
"The pybind11 developers are excited to issue a release candidate of "
"pybind11 with a subsequent v2.0.0 release planned in early January next "
"year."
msgstr ""

#: ../../changelog.rst:2257
msgid ""
"An incredible amount of effort by went into pybind11 over the last ~5 "
"months, leading to a release that is jam-packed with exciting new "
"features and numerous usability improvements. The following list links "
"PRs or individual commits whenever applicable."
msgstr ""

#: ../../changelog.rst:2262
msgid "Happy Christmas!"
msgstr ""

#: ../../changelog.rst:2264
msgid ""
"Support for binding C++ class hierarchies that make use of multiple "
"inheritance. `#410 <https://github.com/pybind/pybind11/pull/410>`_."
msgstr ""

#: ../../changelog.rst:2267
msgid ""
"PyPy support: pybind11 now supports nightly builds of PyPy and will "
"interoperate with the future 5.7 release. No code changes are necessary, "
"everything \"just\" works as usual. Note that we only target the Python "
"2.7 branch for now; support for 3.x will be added once its ``cpyext`` "
"extension support catches up. A few minor features remain unsupported for"
" the time being (notably dynamic attributes in custom types). `#527 "
"<https://github.com/pybind/pybind11/pull/527>`_."
msgstr ""

#: ../../changelog.rst:2275
msgid ""
"Significant work on the documentation -- in particular, the monolithic "
"``advanced.rst`` file was restructured into a easier to read hierarchical"
" organization. `#448 <https://github.com/pybind/pybind11/pull/448>`_."
msgstr ""

#: ../../changelog.rst:2279
msgid "Many NumPy-related improvements:"
msgstr ""

#: ../../changelog.rst:2281
msgid ""
"Object-oriented API to access and modify NumPy ``ndarray`` instances, "
"replicating much of the corresponding NumPy C API functionality. `#402 "
"<https://github.com/pybind/pybind11/pull/402>`_."
msgstr ""

#: ../../changelog.rst:2285
msgid ""
"NumPy array ``dtype`` array descriptors are now first-class citizens and "
"are exposed via a new class ``py::dtype``."
msgstr ""

#: ../../changelog.rst:2288
msgid ""
"Structured dtypes can be registered using the ``PYBIND11_NUMPY_DTYPE()`` "
"macro. Special ``array`` constructors accepting dtype objects were also "
"added."
msgstr ""

#: ../../changelog.rst:2292
msgid ""
"One potential caveat involving this change: format descriptor strings "
"should now be accessed via ``format_descriptor::format()`` (however, for "
"compatibility purposes, the old syntax ``format_descriptor::value`` will "
"still work for non-structured data types). `#308 "
"<https://github.com/pybind/pybind11/pull/308>`_."
msgstr ""

#: ../../changelog.rst:2298
msgid ""
"Further improvements to support structured dtypes throughout the system. "
"`#472 <https://github.com/pybind/pybind11/pull/472>`_, `#474 "
"<https://github.com/pybind/pybind11/pull/474>`_, `#459 "
"<https://github.com/pybind/pybind11/pull/459>`_, `#453 "
"<https://github.com/pybind/pybind11/pull/453>`_, `#452 "
"<https://github.com/pybind/pybind11/pull/452>`_, and `#505 "
"<https://github.com/pybind/pybind11/pull/505>`_."
msgstr ""

#: ../../changelog.rst:2306
msgid ""
"Fast access operators. `#497 "
"<https://github.com/pybind/pybind11/pull/497>`_."
msgstr ""

#: ../../changelog.rst:2308
msgid ""
"Constructors for arrays whose storage is owned by another object. `#440 "
"<https://github.com/pybind/pybind11/pull/440>`_."
msgstr ""

#: ../../changelog.rst:2311
msgid ""
"Added constructors for ``array`` and ``array_t`` explicitly accepting "
"shape and strides; if strides are not provided, they are deduced assuming"
" C-contiguity. Also added simplified constructors for 1-dimensional case."
msgstr ""

#: ../../changelog.rst:2315
msgid ""
"Added buffer/NumPy support for ``char[N]`` and ``std::array<char, N>`` "
"types."
msgstr ""

#: ../../changelog.rst:2317
msgid ""
"Added ``memoryview`` wrapper type which is constructible from "
"``buffer_info``."
msgstr ""

#: ../../changelog.rst:2319
msgid ""
"Eigen: many additional conversions and support for non-contiguous "
"arrays/slices. `#427 <https://github.com/pybind/pybind11/pull/427>`_, "
"`#315 <https://github.com/pybind/pybind11/pull/315>`_, `#316 "
"<https://github.com/pybind/pybind11/pull/316>`_, `#312 "
"<https://github.com/pybind/pybind11/pull/312>`_, and `#267 "
"<https://github.com/pybind/pybind11/pull/267>`_"
msgstr ""

#: ../../changelog.rst:2327
msgid "Incompatible changes in ``class_<...>::class_()``:"
msgstr ""

#: ../../changelog.rst:2329
msgid ""
"Declarations of types that provide access via the buffer protocol must "
"now include the ``py::buffer_protocol()`` annotation as an argument to "
"the ``class_`` constructor."
msgstr ""

#: ../../changelog.rst:2333
msgid ""
"Declarations of types that require a custom metaclass (i.e. all classes "
"which include static properties via commands such as "
"``def_readwrite_static()``) must now include the ``py::metaclass()`` "
"annotation as an argument to the ``class_`` constructor."
msgstr ""

#: ../../changelog.rst:2338
msgid ""
"These two changes were necessary to make type definitions in pybind11 "
"future-proof, and to support PyPy via its cpyext mechanism. `#527 "
"<https://github.com/pybind/pybind11/pull/527>`_."
msgstr ""

#: ../../changelog.rst:2343
msgid ""
"This version of pybind11 uses a redesigned mechanism for instantiating "
"trampoline classes that are used to override virtual methods from within "
"Python. This led to the following user-visible syntax change: instead of"
msgstr ""

#: ../../changelog.rst:2353
msgid "write"
msgstr ""

#: ../../changelog.rst:2360
msgid ""
"Importantly, both the original and the trampoline class are now specified"
" as an arguments (in arbitrary order) to the ``py::class_`` template, and"
" the ``alias<..>()`` call is gone. The new scheme has zero overhead in "
"cases when Python doesn't override any functions of the underlying C++ "
"class. `rev. 86d825 <https://github.com/pybind/pybind11/commit/86d825>`_."
msgstr ""

#: ../../changelog.rst:2367
msgid ""
"Added ``eval`` and ``eval_file`` functions for evaluating expressions and"
" statements from a string or file. `rev. 0d3fc3 "
"<https://github.com/pybind/pybind11/commit/0d3fc3>`_."
msgstr ""

#: ../../changelog.rst:2371
msgid ""
"pybind11 can now create types with a modifiable dictionary. `#437 "
"<https://github.com/pybind/pybind11/pull/437>`_ and `#444 "
"<https://github.com/pybind/pybind11/pull/444>`_."
msgstr ""

#: ../../changelog.rst:2375
msgid ""
"Support for translation of arbitrary C++ exceptions to Python "
"counterparts. `#296 <https://github.com/pybind/pybind11/pull/296>`_ and "
"`#273 <https://github.com/pybind/pybind11/pull/273>`_."
msgstr ""

#: ../../changelog.rst:2379
msgid ""
"Report full backtraces through mixed C++/Python code, better reporting "
"for import errors, fixed GIL management in exception processing. `#537 "
"<https://github.com/pybind/pybind11/pull/537>`_, `#494 "
"<https://github.com/pybind/pybind11/pull/494>`_, `rev. e72d95 "
"<https://github.com/pybind/pybind11/commit/e72d95>`_, and `rev. 099d6e "
"<https://github.com/pybind/pybind11/commit/099d6e>`_."
msgstr ""

#: ../../changelog.rst:2386
msgid ""
"Support for bit-level operations, comparisons, and serialization of C++ "
"enumerations. `#503 <https://github.com/pybind/pybind11/pull/503>`_, "
"`#508 <https://github.com/pybind/pybind11/pull/508>`_, `#380 "
"<https://github.com/pybind/pybind11/pull/380>`_, `#309 "
"<https://github.com/pybind/pybind11/pull/309>`_. `#311 "
"<https://github.com/pybind/pybind11/pull/311>`_."
msgstr ""

#: ../../changelog.rst:2393
msgid ""
"The ``class_`` constructor now accepts its template arguments in any "
"order. `#385 <https://github.com/pybind/pybind11/pull/385>`_."
msgstr ""

#: ../../changelog.rst:2396
msgid ""
"Attribute and item accessors now have a more complete interface which "
"makes it possible to chain attributes as in "
"``obj.attr(\"a\")[key].attr(\"b\").attr(\"method\")(1, 2, 3)``. `#425 "
"<https://github.com/pybind/pybind11/pull/425>`_."
msgstr ""

#: ../../changelog.rst:2401
msgid ""
"Major redesign of the default and conversion constructors in "
"``pytypes.h``. `#464 <https://github.com/pybind/pybind11/pull/464>`_."
msgstr ""

#: ../../changelog.rst:2404
msgid ""
"Added built-in support for ``std::shared_ptr`` holder type. It is no "
"longer necessary to to include a declaration of the form "
"``PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>)`` (though "
"continuing to do so won't cause an error). `#454 "
"<https://github.com/pybind/pybind11/pull/454>`_."
msgstr ""

#: ../../changelog.rst:2410
msgid ""
"New ``py::overload_cast`` casting operator to select among multiple "
"possible overloads of a function. An example:"
msgstr ""

#: ../../changelog.rst:2419
msgid ""
"This feature only works on C++14-capable compilers. `#541 "
"<https://github.com/pybind/pybind11/pull/541>`_."
msgstr ""

#: ../../changelog.rst:2422
msgid ""
"C++ types are automatically cast to Python types, e.g. when assigning "
"them as an attribute. For instance, the following is now legal:"
msgstr ""

#: ../../changelog.rst:2430
msgid ""
"(Previously, a ``py::cast`` call was necessary to avoid a compilation "
"error.) `#551 <https://github.com/pybind/pybind11/pull/551>`_."
msgstr ""

#: ../../changelog.rst:2433
msgid ""
"Redesigned ``pytest``-based test suite. `#321 "
"<https://github.com/pybind/pybind11/pull/321>`_."
msgstr ""

#: ../../changelog.rst:2435
msgid ""
"Instance tracking to detect reference leaks in test suite. `#324 "
"<https://github.com/pybind/pybind11/pull/324>`_"
msgstr ""

#: ../../changelog.rst:2437
msgid ""
"pybind11 can now distinguish between multiple different instances that "
"are located at the same memory address, but which have different types. "
"`#329 <https://github.com/pybind/pybind11/pull/329>`_."
msgstr ""

#: ../../changelog.rst:2441
msgid ""
"Improved logic in ``move`` return value policy. `#510 "
"<https://github.com/pybind/pybind11/pull/510>`_, `#297 "
"<https://github.com/pybind/pybind11/pull/297>`_."
msgstr ""

#: ../../changelog.rst:2445
msgid ""
"Generalized unpacking API to permit calling Python functions from C++ "
"using notation such as ``foo(a1, a2, *args, \"ka\"_a=1, \"kb\"_a=2, "
"**kwargs)``. `#372 <https://github.com/pybind/pybind11/pull/372>`_."
msgstr ""

#: ../../changelog.rst:2448
msgid ""
"``py::print()`` function whose behavior matches that of the native Python"
" ``print()`` function. `#372 "
"<https://github.com/pybind/pybind11/pull/372>`_."
msgstr ""

#: ../../changelog.rst:2451
msgid ""
"Added ``py::dict`` keyword constructor:``auto d = dict(\"number\"_a=42, "
"\"name\"_a=\"World\");``. `#372 "
"<https://github.com/pybind/pybind11/pull/372>`_."
msgstr ""

#: ../../changelog.rst:2454
msgid ""
"Added ``py::str::format()`` method and ``_s`` literal: ``py::str s = \"1 "
"+ 2 = {}\"_s.format(3);``. `#372 "
"<https://github.com/pybind/pybind11/pull/372>`_."
msgstr ""

#: ../../changelog.rst:2457
msgid ""
"Added ``py::repr()`` function which is equivalent to Python's builtin "
"``repr()``. `#333 <https://github.com/pybind/pybind11/pull/333>`_."
msgstr ""

#: ../../changelog.rst:2460
msgid ""
"Improved construction and destruction logic for holder types. It is now "
"possible to reference instances with smart pointer holder types without "
"constructing the holder if desired. The ``PYBIND11_DECLARE_HOLDER_TYPE`` "
"macro now accepts an optional second parameter to indicate whether the "
"holder type uses intrusive reference counting. `#533 "
"<https://github.com/pybind/pybind11/pull/533>`_ and `#561 "
"<https://github.com/pybind/pybind11/pull/561>`_."
msgstr ""

#: ../../changelog.rst:2468
msgid ""
"Mapping a stateless C++ function to Python and back is now \"for free\" "
"(i.e. no extra indirections or argument conversion overheads). `rev. "
"954b79 <https://github.com/pybind/pybind11/commit/954b79>`_."
msgstr ""

#: ../../changelog.rst:2472
msgid ""
"Bindings for ``std::valarray<T>``. `#545 "
"<https://github.com/pybind/pybind11/pull/545>`_."
msgstr ""

#: ../../changelog.rst:2475
msgid ""
"Improved support for C++17 capable compilers. `#562 "
"<https://github.com/pybind/pybind11/pull/562>`_."
msgstr ""

#: ../../changelog.rst:2478
msgid ""
"Bindings for ``std::optional<t>``. `#475 "
"<https://github.com/pybind/pybind11/pull/475>`_, `#476 "
"<https://github.com/pybind/pybind11/pull/476>`_, `#479 "
"<https://github.com/pybind/pybind11/pull/479>`_, `#499 "
"<https://github.com/pybind/pybind11/pull/499>`_, and `#501 "
"<https://github.com/pybind/pybind11/pull/501>`_."
msgstr ""

#: ../../changelog.rst:2485
msgid ""
"``stl_bind.h``: general improvements and support for ``std::map`` and "
"``std::unordered_map``. `#490 "
"<https://github.com/pybind/pybind11/pull/490>`_, `#282 "
"<https://github.com/pybind/pybind11/pull/282>`_, `#235 "
"<https://github.com/pybind/pybind11/pull/235>`_."
msgstr ""

#: ../../changelog.rst:2491
msgid ""
"The ``std::tuple``, ``std::pair``, ``std::list``, and ``std::vector`` "
"type casters now accept any Python sequence type as input. `rev. 107285 "
"<https://github.com/pybind/pybind11/commit/107285>`_."
msgstr ""

#: ../../changelog.rst:2495
msgid ""
"Improved CMake Python detection on multi-architecture Linux. `#532 "
"<https://github.com/pybind/pybind11/pull/532>`_."
msgstr ""

#: ../../changelog.rst:2498
msgid ""
"Infrastructure to selectively disable or enable parts of the "
"automatically generated docstrings. `#486 "
"<https://github.com/pybind/pybind11/pull/486>`_."
msgstr ""

#: ../../changelog.rst:2501
msgid ""
"``reference`` and ``reference_internal`` are now the default return value"
" properties for static and non-static properties, respectively. `#473 "
"<https://github.com/pybind/pybind11/pull/473>`_. (the previous defaults "
"were ``automatic``). `#473 "
"<https://github.com/pybind/pybind11/pull/473>`_."
msgstr ""

#: ../../changelog.rst:2506
msgid ""
"Support for ``std::unique_ptr`` with non-default deleters or no deleter "
"at all (``py::nodelete``). `#384 "
"<https://github.com/pybind/pybind11/pull/384>`_."
msgstr ""

#: ../../changelog.rst:2509
msgid ""
"Deprecated ``handle::call()`` method. The new syntax to call Python "
"functions is simply ``handle()``. It can also be invoked explicitly via "
"``handle::operator<X>()``, where ``X`` is an optional return value "
"policy."
msgstr ""

#: ../../changelog.rst:2513
msgid ""
"Print more informative error messages when ``make_tuple()`` or ``cast()``"
" fail. `#262 <https://github.com/pybind/pybind11/pull/262>`_."
msgstr ""

#: ../../changelog.rst:2516
msgid ""
"Creation of holder types for classes deriving from "
"``std::enable_shared_from_this<>`` now also works for ``const`` values. "
"`#260 <https://github.com/pybind/pybind11/pull/260>`_."
msgstr ""

#: ../../changelog.rst:2520
msgid ""
"``make_iterator()`` improvements for better compatibility with various "
"types (now uses prefix increment operator); it now also accepts iterators"
" with different begin/end types as long as they are equality comparable. "
"`#247 <https://github.com/pybind/pybind11/pull/247>`_."
msgstr ""

#: ../../changelog.rst:2525
msgid ""
"``arg()`` now accepts a wider range of argument types for default values."
" `#244 <https://github.com/pybind/pybind11/pull/244>`_."
msgstr ""

#: ../../changelog.rst:2528
msgid ""
"Support ``keep_alive`` where the nurse object may be ``None``. `#341 "
"<https://github.com/pybind/pybind11/pull/341>`_."
msgstr ""

#: ../../changelog.rst:2531
msgid ""
"Added constructors for ``str`` and ``bytes`` from zero-terminated char "
"pointers, and from char pointers and length. Added constructors for "
"``str`` from ``bytes`` and for ``bytes`` from ``str``, which will perform"
" UTF-8 decoding/encoding as required."
msgstr ""

#: ../../changelog.rst:2536
msgid "Many other improvements of library internals without user-visible changes"
msgstr ""

#: ../../changelog.rst:2540
msgid "1.8.1 (July 12, 2016)"
msgstr ""

#: ../../changelog.rst:2541
msgid ""
"Fixed a rare but potentially very severe issue when the garbage collector"
" ran during pybind11 type creation."
msgstr ""

#: ../../changelog.rst:2545
msgid "1.8.0 (June 14, 2016)"
msgstr ""

#: ../../changelog.rst:2546
msgid ""
"Redesigned CMake build system which exports a convenient "
"``pybind11_add_module`` function to parent projects."
msgstr ""

#: ../../changelog.rst:2548
msgid ""
"``std::vector<>`` type bindings analogous to Boost.Python's "
"``indexing_suite``"
msgstr ""

#: ../../changelog.rst:2549
msgid ""
"Transparent conversion of sparse and dense Eigen matrices and vectors "
"(``eigen.h``)"
msgstr ""

#: ../../changelog.rst:2550
msgid ""
"Added an ``ExtraFlags`` template argument to the NumPy ``array_t<>`` "
"wrapper to disable an enforced cast that may lose precision, e.g. to "
"create overloads for different precisions and complex vs real-valued "
"matrices."
msgstr ""

#: ../../changelog.rst:2553
msgid ""
"Prevent implicit conversion of floating point values to integral types in"
" function arguments"
msgstr ""

#: ../../changelog.rst:2555
msgid ""
"Fixed incorrect default return value policy for functions returning a "
"shared pointer"
msgstr ""

#: ../../changelog.rst:2557
msgid "Don't allow registering a type via ``class_`` twice"
msgstr ""

#: ../../changelog.rst:2558
msgid "Don't allow casting a ``None`` value into a C++ lvalue reference"
msgstr ""

#: ../../changelog.rst:2559
msgid ""
"Fixed a crash in ``enum_::operator==`` that was triggered by the "
"``help()`` command"
msgstr ""

#: ../../changelog.rst:2560
msgid ""
"Improved detection of whether or not custom C++ types can be copy/move-"
"constructed"
msgstr ""

#: ../../changelog.rst:2561
msgid "Extended ``str`` type to also work with ``bytes`` instances"
msgstr ""

#: ../../changelog.rst:2562
msgid ""
"Added a ``\"name\"_a`` user defined string literal that is equivalent to "
"``py::arg(\"name\")``."
msgstr ""

#: ../../changelog.rst:2563
msgid ""
"When specifying function arguments via ``py::arg``, the test that "
"verifies the number of arguments now runs at compile time."
msgstr ""

#: ../../changelog.rst:2565
msgid ""
"Added ``[[noreturn]]`` attribute to ``pybind11_fail()`` to quench some "
"compiler warnings"
msgstr ""

#: ../../changelog.rst:2567
msgid ""
"List function arguments in exception text when the dispatch code cannot "
"find a matching overload"
msgstr ""

#: ../../changelog.rst:2569
msgid ""
"Added ``PYBIND11_OVERLOAD_NAME`` and ``PYBIND11_OVERLOAD_PURE_NAME`` "
"macros which can be used to override virtual methods whose name differs "
"in C++ and Python (e.g. ``__call__`` and ``operator()``)"
msgstr ""

#: ../../changelog.rst:2572
msgid "Various minor ``iterator`` and ``make_iterator()`` improvements"
msgstr ""

#: ../../changelog.rst:2573
msgid "Transparently support ``__bool__`` on Python 2.x and Python 3.x"
msgstr ""

#: ../../changelog.rst:2574
msgid "Fixed issue with destructor of unpickled object not being called"
msgstr ""

#: ../../changelog.rst:2575
msgid "Minor CMake build system improvements on Windows"
msgstr ""

#: ../../changelog.rst:2576
msgid ""
"New ``pybind11::args`` and ``pybind11::kwargs`` types to create functions"
" which take an arbitrary number of arguments and keyword arguments"
msgstr ""

#: ../../changelog.rst:2578
msgid ""
"New syntax to call a Python function from C++ using ``*args`` and "
"``*kwargs``"
msgstr ""

#: ../../changelog.rst:2579
msgid ""
"The functions ``def_property_*`` now correctly process docstring "
"arguments (these formerly caused a segmentation fault)"
msgstr ""

#: ../../changelog.rst:2581
msgid ""
"Many ``mkdoc.py`` improvements (enumerations, template arguments, "
"``DOC()`` macro accepts more arguments)"
msgstr ""

#: ../../changelog.rst:2583
msgid "Cygwin support"
msgstr ""

#: ../../changelog.rst:2584
msgid "Documentation improvements (pickling support, ``keep_alive``, macro usage)"
msgstr ""

#: ../../changelog.rst:2587
msgid "1.7 (April 30, 2016)"
msgstr ""

#: ../../changelog.rst:2588
msgid ""
"Added a new ``move`` return value policy that triggers C++11 move "
"semantics. The automatic return value policy falls back to this case "
"whenever a rvalue reference is encountered"
msgstr ""

#: ../../changelog.rst:2591
msgid ""
"Significantly more general GIL state routines that are used instead of "
"Python's troublesome ``PyGILState_Ensure`` and ``PyGILState_Release`` API"
msgstr ""

#: ../../changelog.rst:2593
msgid "Redesign of opaque types that drastically simplifies their usage"
msgstr ""

#: ../../changelog.rst:2594
msgid "Extended ability to pass values of type ``[const] void *``"
msgstr ""

#: ../../changelog.rst:2595
msgid "``keep_alive`` fix: don't fail when there is no patient"
msgstr ""

#: ../../changelog.rst:2596
msgid "``functional.h``: acquire the GIL before calling a Python function"
msgstr ""

#: ../../changelog.rst:2597
msgid "Added Python RAII type wrappers ``none`` and ``iterable``"
msgstr ""

#: ../../changelog.rst:2598
msgid ""
"Added ``*args`` and ``*kwargs`` pass-through parameters to "
"``pybind11.get_include()`` function"
msgstr ""

#: ../../changelog.rst:2600
msgid "Iterator improvements and fixes"
msgstr ""

#: ../../changelog.rst:2601
msgid "Documentation on return value policies and opaque types improved"
msgstr ""

#: ../../changelog.rst:2604
msgid "1.6 (April 30, 2016)"
msgstr ""

#: ../../changelog.rst:2605
msgid ""
"Skipped due to upload to PyPI gone wrong and inability to recover "
"(https://github.com/pypa/packaging-problems/issues/74)"
msgstr ""

#: ../../changelog.rst:2609
msgid "1.5 (April 21, 2016)"
msgstr ""

#: ../../changelog.rst:2610
msgid ""
"For polymorphic types, use RTTI to try to return the closest type "
"registered with pybind11"
msgstr ""

#: ../../changelog.rst:2611
msgid ""
"Pickling support for serializing and unserializing C++ instances to a "
"byte stream in Python"
msgstr ""

#: ../../changelog.rst:2612
msgid ""
"Added a convenience routine ``make_iterator()`` which turns a range "
"indicated by a pair of C++ iterators into a iterable Python object"
msgstr ""

#: ../../changelog.rst:2614
msgid "Added ``len()`` and a variadic ``make_tuple()`` function"
msgstr ""

#: ../../changelog.rst:2615
msgid ""
"Addressed a rare issue that could confuse the current virtual function "
"dispatcher and another that could lead to crashes in multi-threaded "
"applications"
msgstr ""

#: ../../changelog.rst:2618
msgid ""
"Added a ``get_include()`` function to the Python module that returns the "
"path of the directory containing the installed pybind11 header files"
msgstr ""

#: ../../changelog.rst:2620
msgid ""
"Documentation improvements: import issues, symbol visibility, pickling, "
"limitations"
msgstr ""

#: ../../changelog.rst:2621
msgid "Added casting support for ``std::reference_wrapper<>``"
msgstr ""

#: ../../changelog.rst:2624
msgid "1.4 (April 7, 2016)"
msgstr ""

#: ../../changelog.rst:2625
msgid "Transparent type conversion for ``std::wstring`` and ``wchar_t``"
msgstr ""

#: ../../changelog.rst:2626
msgid "Allow passing ``nullptr``-valued strings"
msgstr ""

#: ../../changelog.rst:2627
msgid "Transparent passing of ``void *`` pointers using capsules"
msgstr ""

#: ../../changelog.rst:2628
msgid "Transparent support for returning values wrapped in ``std::unique_ptr<>``"
msgstr ""

#: ../../changelog.rst:2629
msgid "Improved docstring generation for compatibility with Sphinx"
msgstr ""

#: ../../changelog.rst:2630
msgid "Nicer debug error message when default parameter construction fails"
msgstr ""

#: ../../changelog.rst:2631
msgid ""
"Support for \"opaque\" types that bypass the transparent conversion layer"
" for STL containers"
msgstr ""

#: ../../changelog.rst:2632
msgid ""
"Redesigned type casting interface to avoid ambiguities that could "
"occasionally cause compiler errors"
msgstr ""

#: ../../changelog.rst:2633
msgid ""
"Redesigned property implementation; fixes crashes due to an unfortunate "
"default return value policy"
msgstr ""

#: ../../changelog.rst:2634
msgid "Anaconda package generation support"
msgstr ""

#: ../../changelog.rst:2637
msgid "1.3 (March 8, 2016)"
msgstr ""

#: ../../changelog.rst:2639
msgid "Added support for the Intel C++ compiler (v15+)"
msgstr ""

#: ../../changelog.rst:2640
msgid "Added support for the STL unordered set/map data structures"
msgstr ""

#: ../../changelog.rst:2641
msgid "Added support for the STL linked list data structure"
msgstr ""

#: ../../changelog.rst:2642
msgid "NumPy-style broadcasting support in ``pybind11::vectorize``"
msgstr ""

#: ../../changelog.rst:2643
msgid ""
"pybind11 now displays more verbose error messages when "
"``arg::operator=()`` fails"
msgstr ""

#: ../../changelog.rst:2644
msgid ""
"pybind11 internal data structures now live in a version-dependent "
"namespace to avoid ABI issues"
msgstr ""

#: ../../changelog.rst:2645
msgid "Many, many bugfixes involving corner cases and advanced usage"
msgstr ""

#: ../../changelog.rst:2648
msgid "1.2 (February 7, 2016)"
msgstr ""

#: ../../changelog.rst:2650
msgid ""
"Optional: efficient generation of function signatures at compile time "
"using C++14"
msgstr ""

#: ../../changelog.rst:2651
msgid ""
"Switched to a simpler and more general way of dealing with function "
"default arguments. Unused keyword arguments in function calls are now "
"detected and cause errors as expected"
msgstr ""

#: ../../changelog.rst:2654
msgid ""
"New ``keep_alive`` call policy analogous to Boost.Python's "
"``with_custodian_and_ward``"
msgstr ""

#: ../../changelog.rst:2655
msgid "New ``pybind11::base<>`` attribute to indicate a subclass relationship"
msgstr ""

#: ../../changelog.rst:2656
msgid "Improved interface for RAII type wrappers in ``pytypes.h``"
msgstr ""

#: ../../changelog.rst:2657
msgid ""
"Use RAII type wrappers consistently within pybind11 itself. This fixes "
"various potential refcount leaks when exceptions occur"
msgstr ""

#: ../../changelog.rst:2659
msgid "Added new ``bytes`` RAII type wrapper (maps to ``string`` in Python 2.7)"
msgstr ""

#: ../../changelog.rst:2660
msgid ""
"Made handle and related RAII classes const correct, using them more "
"consistently everywhere now"
msgstr ""

#: ../../changelog.rst:2662
msgid ""
"Got rid of the ugly ``__pybind11__`` attributes on the Python side---they"
" are now stored in a C++ hash table that is not visible in Python"
msgstr ""

#: ../../changelog.rst:2664
msgid "Fixed refcount leaks involving NumPy arrays and bound functions"
msgstr ""

#: ../../changelog.rst:2665
msgid "Vastly improved handling of shared/smart pointers"
msgstr ""

#: ../../changelog.rst:2666
msgid "Removed an unnecessary copy operation in ``pybind11::vectorize``"
msgstr ""

#: ../../changelog.rst:2667
msgid "Fixed naming clashes when both pybind11 and NumPy headers are included"
msgstr ""

#: ../../changelog.rst:2668
msgid "Added conversions for additional exception types"
msgstr ""

#: ../../changelog.rst:2669
msgid ""
"Documentation improvements (using multiple extension modules, smart "
"pointers, other minor clarifications)"
msgstr ""

#: ../../changelog.rst:2671
msgid ""
"unified infrastructure for parsing variadic arguments in ``class_`` and "
"cpp_function"
msgstr ""

#: ../../changelog.rst:2672
msgid "Fixed license text (was: ZLIB, should have been: 3-clause BSD)"
msgstr ""

#: ../../changelog.rst:2673
msgid "Python 3.2 compatibility"
msgstr ""

#: ../../changelog.rst:2674
msgid "Fixed remaining issues when accessing types in another plugin module"
msgstr ""

#: ../../changelog.rst:2675
msgid "Added enum comparison and casting methods"
msgstr ""

#: ../../changelog.rst:2676
msgid "Improved SFINAE-based detection of whether types are copy-constructible"
msgstr ""

#: ../../changelog.rst:2677
msgid ""
"Eliminated many warnings about unused variables and the use of "
"``offsetof()``"
msgstr ""

#: ../../changelog.rst:2678
msgid "Support for ``std::array<>`` conversions"
msgstr ""

#: ../../changelog.rst:2681
msgid "1.1 (December 7, 2015)"
msgstr ""

#: ../../changelog.rst:2683
msgid ""
"Documentation improvements (GIL, wrapping functions, casting, fixed many "
"typos)"
msgstr ""

#: ../../changelog.rst:2684
msgid "Generalized conversion of integer types"
msgstr ""

#: ../../changelog.rst:2685
msgid "Improved support for casting function objects"
msgstr ""

#: ../../changelog.rst:2686
msgid "Improved support for ``std::shared_ptr<>`` conversions"
msgstr ""

#: ../../changelog.rst:2687
msgid "Initial support for ``std::set<>`` conversions"
msgstr ""

#: ../../changelog.rst:2688
msgid "Fixed type resolution issue for types defined in a separate plugin module"
msgstr ""

#: ../../changelog.rst:2689
msgid "CMake build system improvements"
msgstr ""

#: ../../changelog.rst:2690
msgid ""
"Factored out generic functionality to non-templated code (smaller code "
"size)"
msgstr ""

#: ../../changelog.rst:2691
msgid "Added a code size / compile time benchmark vs Boost.Python"
msgstr ""

#: ../../changelog.rst:2692
msgid "Added an appveyor CI script"
msgstr ""

#: ../../changelog.rst:2695
msgid "1.0 (October 15, 2015)"
msgstr ""

#: ../../changelog.rst:2696
msgid "Initial release"
msgstr ""

#~ msgid ""
#~ "Removed support for Python 2.7, Python"
#~ " 3.5, and MSVC 2015. Support for "
#~ "MSVC 2017 is limited due to "
#~ "availability of CI runners; we highly"
#~ " recommend MSVC 2019 or 2022 be "
#~ "used."
#~ msgstr ""

#~ msgid ""
#~ "Python 2 support was removed completely."
#~ " `#3688 <https://github.com/pybind/pybind11/pull/3688>`_"
#~ msgstr ""

#~ msgid ""
#~ "``PYBIND11_OBJECT_CVT`` and "
#~ "``PYBIND11_OBJECT_CVT_DEFAULT`` macro can be "
#~ "used to define classes in namespaces "
#~ "other than pybind11. `#3797 "
#~ "<https://github.com/pybind/pybind11/pull/3797>`_"
#~ msgstr ""

#~ msgid ""
#~ "Remove idioms in code comments.  Use "
#~ "inclusive language. `#3809 "
#~ "<https://github.com/pybind/pybind11/pull/3809>`_"
#~ msgstr ""

